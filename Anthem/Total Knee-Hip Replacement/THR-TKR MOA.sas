*THR/TKR MOA*;
*NOTE: IF YOU NEED TO RERUN THE CODE ABOVE RUN THE PROC DATASETS LINE BELOW TO CLEAR ALL TEMPORARY DATASETS SO OLD DATASETS DONT GET APPENDED TO NEW DATASETS*; 
PROC DATASETS LIBRARY=WORK KILL; RUN; QUIT;

OPTIONS MPRINT COMPRESS=YES;

**********************************************************************************************************************************************************************;
*MACRO PARAMETERS:*;

*STARTDATE: THE MONTH AND YEAR OF THE START OF THAT RELEASE (E.G. FOR R7, 0115)*;
*ENDDATE: THE MONTH AND YEAR OF THE END OF THAT RELEASE (E.G. FOR R7, 1215)*;
*BUNDLE: ABBREVIATION FOR BUNDLE (E.G. MAT)*;
*FILEPATH: A FILEPATH FOR OUTPUTTING (MUST BE SOMETHING YOU HAVE PERMISSION TO WRITE TO) (E.G. /ephc/ebp/nobackup/users/blase/)*; 
*RELEASE: RELEASE OF THE DATASET (E.G. R5)*;
*STATE: STATE ABBREVIATION (E.G. OH)*;
*FACIDVAR: FACILITY ID VARIABLE TO DISPLAY IN REPORTS ON PROVIDERS AND COST BY INDEX FACILITY TABS (E.G. billg_tax_id_hoppa OR indx_SRC_BILLG_TAX_ID)*;
*NOTE: DO NOT CHANGE THE DATASET MACRO VARIABLE, IT WILL BE CREATED FROM OTHER MACRO VARIABLES YOU POPULATE*;
**********************************************************************************************************************************************************************;
*FILL IN 7 PARAMETERS BELOW*;

%LET STARTDATE=1015;
%LET ENDDATE=0916;
%LET BUNDLE=TKR;
%LET RELEASE=R10;
%LET STATE=OH;
%LET FACIDVAR=BILLG_TAX_ID_HOPPA;
%LET FILEPATH=/ephc/ebp/nobackup/users/blase/;
*------------------------------------------------------------------------------------------------------------------*;

%LET DATASET=&STATE._&BUNDLE._&STARTDATE._&ENDDATE._&RELEASE;
libname &BUNDLE._LIB "/ephc/ebp/backup/data/phi/tjr/%LOWCASE(&STATE)/%LOWCASE(&BUNDLE)";


PROC FORMAT;

VALUE $WF "INITIAL_EPISODES"="Initial Bundle Services Identified"
		    "ANTHEM_EXCLUDE"="Anthem is not Primary"
			"AGE_EXCLUDE"="Age < 18"
			"GENDER_EXCLUDE"="Gender"
			"ENROLL_EXCLUDE"="Not Continuously Enrolled in a Single Health Plan"
			"PRODUCT_EXCLUDE"="Enrolled in ineligible Product (i.e. Hospital Only, Capitated)"
			"MBR_TOT_EXCLUDE"="TOTAL Member Program Participation Eligibility Exclusions"
			"CLIN_HIST_EXCLUDE"="Clinical Historical Exclusion Prior to or Present on Admission"
			"CLIN_INDX_EXCLUDE"="Clinical  Exclusion during the Index Period"
			"CLIN_TOT_EXCLUDE"="TOTAL Clinical Program Exclusions"
			"CLIN_DISCON_EXCLUDE"="Clinical Exclusion for a Discontinued Procedure"
			"MCARE_EXCLUDE"="Medicare"
			"MCAID_EXCLUDE"="Medicaid"
			"PGM_TOT_EXCLUDE"="TOTAL Member Program Participation Eligibility Exclusions "
			"ELIG_EPISODES"="Total Bundle Services Met Program Eligibility"
			"MEM_EXCL_HEADING"="Member Program Participation Eligibility Exclusions" 
			"CLIN_EXCL_HEADING"="Clinical Program Exclusions"
			"PGM_EXCL_HEADING"="Program Participation Exclusions";

VALUE $ SRVC "IP Hosp"="Inpatient Hospital"
		   "OP Hosp"="Outpatient Hospital"
		   "ASC"="Ambulatory Surgical Center"
			"Total"="Episode Bundle Volume - Total";

VALUE $ SRVCNEW "IP Hosp"="ACUTE INPATIENT HOSPITAL"
		   "OP Hosp"="ACUTE OUTPATIENT HOSPITAL"
		   "ASC"="AMBULATORY SURGICAL CENTER"
			"Total"="ALL SITES OF SERVICE";


VALUE $ TMPFMT 'Total'='1'
			 'IP Hosp'='2'
			 'OP Hosp'='3'
			 'ASC'='4';

VALUE $CODEFMT '1'='Episode Bundle Volume - Total'
				'2'='Inpatient Hospital'
				'3'='Outpatient Hospital'
				'4'='Ambulatory Surgical Center';


VALUE $LOBF 'COMMERCIAL BUSINESS'='COMMERCIAL'
			'FEDERAL GOVERNMENT SOLUTIONS'='FEP';


VALUE $PRODUCTF 'POS'='OTHER';

VALUE $FUNDF 'ALTERNATE FUNDED'='ASO'
			 'INSURED'='FI';

VALUE $FUND2F 'ALTERNATE FUNDED'='ALTERNATE FUNDED (ASO)'
			 'INSURED'='FULLY INSURED (FI)';


RUN;

/*RUNNING ELIGIBLE EPISODES FOR ALL 14 MARKETS*/
*NOT DOING THIS PART IN THE MANUAL MOA ANYMORE BUT IT IS DONE IN THE BO VERSION*;

/*%MACRO ALLTKR;*/
/**/
/*%LET STLIST=CA CO CT GA IN KY ME MO NH NV NY OH VA WI;*/
/**/
/*%DO A=1 %TO 14;*/
/*        %LET ST=%SCAN(&STLIST, &A, %STR( ));*/
/**/
/*libname &ST._LIB "/ephc/ebp/backup/data/phi/tjr/%LOWCASE(&ST)/%LOWCASE(&BUNDLE)";*/
/**/
/*PROC SQL;*/
/*CREATE TABLE ALLVAR_&ST.2 AS*/
/*SELECT bundlecost_tot_PCR, &FACIDVAR, SURGEON_NPI, MBR_KEY,  */
/*COUNT(*) AS ELIGTOT,*/
/*"&ST" AS STATE,*/
/*UPCASE(FACNAME_HOPPA) AS FACNAME_HOPPA2,*/
/*UPCASE(SURGEON_NAME) AS SURGEON_NAME2*/
/*FROM &ST._LIB.&ST._&BUNDLE._&STARTDATE._&ENDDATE._&RELEASE*/
/*WHERE DRG_flg=1 AND /* Exclude episodes with the correct surg proc code but incorrect DRG (i.e., 462)*/*/
/* 		  /* DRG inclusion criteria for index procedure but only apply to IP episodes */*/
/*			  /* allows for ASC episodes to not be excluded b/c DRG criteria is not applicable */*/
/*ind_flg=1 AND /* index trigger occurred within designated index period exclude 2nd index trigger */*/
/*			  /* occurring during experience period but outside of index period -- ind_flg=2 */*/
/* cap_flg in (0,2) AND  /* product exclusion criteria episodes with capitation-- cap_flg=1 */*/
/*ex_dx_flg=0 AND 	/* clinical historical exclusion criteria */*/
/*dx_flg=1 AND 		/* Dx inclusion criteria */*/
/*lob_lvl_flg in (1,2,3,4) AND /* Program Participation Exclusions of MCARE and MCAID */					*/
/*enrl_flg=1 AND /* continuous enrollment criteria */*/
/*lob_flg=1 AND  /* continuous enrollment in same plan criteria */*/
/*age_flg=1 AND  /* minimum age at index service date criteria */*/
/*WP_Primary=0 AND /* Anthem primary criteria */*/
/*blt_flg=0 AND   /* bilateral exclusion criteria */*/
/*hosp_only_flg=0; /* product exclusion criteria */*/
/**/
/*QUIT;*/
/**/
/*PROC APPEND BASE=ALLSTATES2 DATA=ALLVAR_&ST.2 FORCE; /*RUN;*/
/**/
/*PROC SQL;*/
/*CREATE TABLE CT_&ST.2 AS*/
/*SELECT*/
/*COUNT(*) AS ELIGTOT,*/
/*"&ST" AS STATE*/
/*FROM ALLVAR_&ST.2;*/
/*QUIT;*/
/**/
/*PROC APPEND BASE=ALLSTATES_COUNT2 DATA=CT_&ST.2 FORCE; RUN;*/
/**/
/*%END;*/
/**/
/*%MEND ALLTKR;*/
/*%ALLTKR; */

*COMMENTED OUT PART TO GENERATE TOP 5 SURGEONS AND FACILITIES CHARTS SINCE NOT USING IN NEXT ITERATION 
OF MOA - 6/26/17*;
*CLEANING SURGEON NAME*;
*EXTRACTING INDIVIDUAL SURGEONS*;

/*PROC SQL;*/
/*CREATE TABLE ALLST_TAB4 AS*/
/*SELECT DISTINCT SURGEON_NPI, SURGEON_NAME2*/
/*FROM ALLSTATES2*/
/*ORDER BY SURGEON_NPI, SURGEON_NAME2;*/
/*QUIT;*/
/**/
/**IF PROVIDER HAS THE SAME NPI BUT NAME IS DIFFERENT THIS REMOVES DUPLICATE NAMES*;*/
/*DATA ALLST_TAB5;*/
/*SET ALLST_TAB4;*/
/*BY SURGEON_NPI;*/
/*IF FIRST.SURGEON_NPI;*/
/*RUN;*/
/**/
/**RE-SORTING DATASET TO BE MERGED BELOW*;*/
/*PROC SORT DATA=ALLST_TAB5; BY SURGEON_NPI; RUN;*/
/*PROC SORT DATA=ALLSTATES2; BY SURGEON_NPI; RUN;*/
/**/
/**REMERGING DATASET WITH NAME CORRECTIONS FOR LATER USE AND ONLY KEEPING ELIGIBLE CASES*;*/
/**NOTE: USE SURGEON_NAME2 FOR SURGEON NAME AND FACNAME_HOPPA2 FOR FACILITY NAME SINCE THEYRE CORRECTED*;*/
/*DATA ALLST_&BUNDLE;*/
/*MERGE ALLSTATES2 (DROP=SURGEON_NAME2)*/
/*	  ALLST_TAB5;*/
/*BY SURGEON_NPI;*/
/*RUN;*/
/**/
/**TOP 5 FACILITIES IN THE STATE*;*/
/*PROC SQL;*/
/*CREATE TABLE ALLST_FACILITY AS */
/*SELECT FACNAME_HOPPA2,*/
/*COUNT(*) AS ELIG_FAC*/
/*FROM ALLST_&BUNDLE*/
/*GROUP BY FACNAME_HOPPA2*/
/*ORDER BY ELIG_FAC DESC, FACNAME_HOPPA2;*/
/*QUIT;*/
/**/
/**OUTPUT THIS FOR DASHBOARD TAB*;*/
/*DATA FACILITY5;*/
/*SET ALLST_FACILITY;*/
/**/
/*IF _N_<=5;*/
/**/
/*RUN;*/
/**/
/**TOP 5 SURGEONS IN THE STATE*;*/
/*PROC SQL;*/
/*CREATE TABLE ALLST_SURGEON AS */
/*SELECT SURGEON_NAME2,*/
/*COUNT(*) AS ELIG_SURG*/
/*FROM ALLST_&BUNDLE*/
/*GROUP BY SURGEON_NAME2*/
/*ORDER BY ELIG_SURG DESC, SURGEON_NAME2;*/
/*QUIT;*/
/**/
/**THIS WILL BE OUTPUT FOR DASHBOARD TAB*;*/
/*DATA SURGEON5;*/
/*SET ALLST_SURGEON;*/
/**/
/*IF _N_<=5;*/
/**/
/*RUN;*/

*CALCULATING MEAN, MEDIAN, 1ST AND 3RD QUARTILES FOR ALL ELIGIBLE EPISODES IN ALL STATES*;
/*PROC MEANS DATA=ALLSTATES2 N MEAN MEDIAN Q1 Q3 MAXDEC=0;*/
/*VAR bundlecost_tot_PCR;*/
/*OUTPUT OUT=ALLSTATES_OUT N=BUNDLE_N MEAN=BUNDLE_MEAN MEDIAN=BUNDLE_MEDIAN Q1=BUNDLE_Q1 Q3=BUNDLE_Q3;*/
/*RUN;*/


*GENERATING COUNTS FOR WATERFALL*;
PROC SQL;
CREATE TABLE &BUNDLE._WATERFALL AS
SELECT
/* GENERATE TOPLINE -- Initial Episodes */
SUM (IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9) AS INITIAL_EPISODES,
/* MEMBER Program Participation Exclusions */
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9  
AND WP_PRIMARY=1) AS ANTHEM_EXCLUDE,
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=0) AS AGE_EXCLUDE, 
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD not in ('F','M','UNK') )) AS GENDER_EXCLUDE,
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK')) AND (ENRL_FLG=0 OR LOB_FLG=0)) AS ENROLL_EXCLUDE,     
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK')) AND (ENRL_FLG=1 AND LOB_FLG=1) AND (HOSP_ONLY_FLG=1
OR CAP_FLG=1)) AS PRODUCT_EXCLUDE,
/** MEMBER SUBTOTAL **/
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 AND WP_PRIMARY=1) +
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9  
AND WP_PRIMARY=0 AND AGE_FLG=0) +
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD not in ('F','M','UNK') )) +
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK')) AND (ENRL_FLG=0 OR LOB_FLG=0)) +
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK')) AND (ENRL_FLG=1 AND LOB_FLG=1) AND (HOSP_ONLY_FLG=1
OR CAP_FLG=1))
AS MBR_TOT_EXCLUDE,

/* CLINICAL Program Exclusions */
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=1) AS CLIN_HIST_EXCLUDE,
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=0 AND (DX_FLG=0 OR BLT_FLG=1)) AS CLIN_INDX_EXCLUDE,   
/** CLINICAL SUBTOTAL **/
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=1) + 
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=0 AND (DX_FLG=0 OR BLT_FLG=1))
AS CLIN_TOT_EXCLUDE,

/* PROGRAM Participation Exclusions */
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=0 AND (DX_FLG=1 AND BLT_FLG=0) AND (LOB_LVL_FLG in (5,6,7))) 
AS MCARE_EXCLUDE,    
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=0 AND (DX_FLG=1 AND BLT_FLG=0) AND (LOB_LVL_FLG not in (5,6,7)) 
AND LOB_LVL_FLG=8) AS MCAID_EXCLUDE,
/** PROGRAM SUBTOTAL **/
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=0 AND (DX_FLG=1 AND BLT_FLG=0) AND (LOB_LVL_FLG in (5,6,7))) +
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=0 AND (DX_FLG=1 AND BLT_FLG=0) AND (LOB_LVL_FLG not in (5,6,7)) 
AND LOB_LVL_FLG=8) AS PGM_TOT_EXCLUDE,

/* TOTAL Program Eligible Episode Bundles */
/* INITIAL_EPISODES - MBR_TOT_EXCLUDE - CLIN_TOT_EXCLUDE - PGM_TOT_EXCLUDE = ELIG_EPISODES */
SUM (IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9) -
/* MBR_TOT_EXCLUDE */
(SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 AND WP_PRIMARY=1) +
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9  
AND WP_PRIMARY=0 AND AGE_FLG=0) +
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD not in ('F','M','UNK') )) +
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK')) AND (ENRL_FLG=0 OR LOB_FLG=0)) +
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK')) AND (ENRL_FLG=1 AND LOB_FLG=1) AND (HOSP_ONLY_FLG=1
OR CAP_FLG=1))) -
/* CLIN_TOT_EXCLUDE */
(SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=1) + 
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=0 AND (DX_FLG=0 OR BLT_FLG=1)))  -
/* PGM_TOT_EXCLUDE */
(SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=0 AND (DX_FLG=1 AND BLT_FLG=0) AND (LOB_LVL_FLG in (5,6,7))) +
SUM(IND_FLG=1 AND DRG_FLG=1 AND LOB_LVL_FLG ne 9 
AND WP_PRIMARY=0 AND AGE_FLG=1 AND 
(MBR_GNDR_CD in ('F','M','UNK') )AND (ENRL_FLG=1 AND LOB_FLG=1) AND hosp_only_flg=0
AND CAP_FLG in (0,2) AND EX_DX_FLG=0 AND (DX_FLG=1 AND BLT_FLG=0) AND (LOB_LVL_FLG not in (5,6,7)) 
AND LOB_LVL_FLG=8))
AS ELIG_EPISODES
FROM &BUNDLE._LIB.&DATASET;

QUIT;

DATA WF_TAB1;
SET &BUNDLE._WATERFALL;

*ADDING VARIABLES FOR LINES WITH ONLY HEADINGS IN REPORT*;
MEM_EXCL_HEADING=" ";
CLIN_EXCL_HEADING=" ";
PGM_EXCL_HEADING=" ";

RUN;

PROC TRANSPOSE DATA=WF_TAB1 OUT=WF_TAB2 NAME=VAR1; 
VAR INITIAL_EPISODES
MEM_EXCL_HEADING 
ANTHEM_EXCLUDE 
AGE_EXCLUDE 
GENDER_EXCLUDE 
ENROLL_EXCLUDE 
PRODUCT_EXCLUDE 
MBR_TOT_EXCLUDE 
CLIN_EXCL_HEADING
CLIN_HIST_EXCLUDE 
CLIN_INDX_EXCLUDE 
CLIN_TOT_EXCLUDE 
PGM_EXCL_HEADING
MCARE_EXCLUDE 
MCAID_EXCLUDE 
PGM_TOT_EXCLUDE 
ELIG_EPISODES; 
RUN;

%*THIS TABLE WILL BE OUTPUT*;
DATA WF_TAB3;
SET WF_TAB2;

IF VAR1="GENDER_EXCLUDE" THEN COL1="NA"; *CORRECTING GENDER FROM 0 TO NA*;

RUN;


DATA ELIGIBLE_&STATE;
SET &BUNDLE._LIB.&DATASET;
LENGTH PLAN $ 40.;


/*** VALID -- Commercial - EXCLUSION CASCADE   ***/
*NOTE: EXCLUSIONS ARE THE SAME FOR THR AND TKR*;
if 
DRG_flg=1 AND /* Exclude episodes with the correct surg proc code but incorrect DRG (i.e., 462)*/
 		  /* DRG inclusion criteria for index procedure but only apply to IP episodes */
			  /* allows for ASC episodes to not be excluded b/c DRG criteria is not applicable */
ind_flg=1 AND /* index trigger occurred within designated index period exclude 2nd index trigger */
			  /* occurring during experience period but outside of index period -- ind_flg=2 */
 cap_flg in (0,2) AND  /* product exclusion criteria episodes with capitation-- cap_flg=1 */
ex_dx_flg=0 AND 	/* clinical historical exclusion criteria */
dx_flg=1 AND 		/* Dx inclusion criteria */
lob_lvl_flg in (1,2,3,4) AND /* Program Participation Exclusions of MCARE and MCAID */					
enrl_flg=1 AND /* continuous enrollment criteria */
lob_flg=1 AND  /* continuous enrollment in same plan criteria */
age_flg=1 AND  /* minimum age at index service date criteria */
WP_Primary=0 AND /* Anthem primary criteria */
blt_flg=0 AND   /* bilateral exclusion criteria */
hosp_only_flg=0; /* product exclusion criteria */

*CONVERTING PLACE OF SERVICE VARIABLE*;
*ER (indx_PLACE_OF_SRVC_CD='23') CLASSIFIED AS OP PER SS IN EMAIL ON 3/15/16*;
IF indx_PLACE_OF_SRVC_CD='21' THEN SRVC="IP Hosp";
ELSE IF indx_PLACE_OF_SRVC_CD IN ('22','23') THEN SRVC="OP Hosp";
ELSE SRVC="ASC";

*MAKING NUMERIC SRVC VARIABLE SO EASIER TO SORT*;
IF indx_PLACE_OF_SRVC_CD='21' THEN SRVC2=1;
ELSE IF indx_PLACE_OF_SRVC_CD IN ('22','23') THEN SRVC2=2;
ELSE SRVC2=3;

*READMISSION FLAG*;
IF READMIT_FLG=1 AND (compl_flg=1 OR revise_flg=1) THEN READMISSION=1;
ELSE READMISSION=0;

*PLAN*;
IF  PROD_LVL_4_DESC='MEDICARE ADVANTAGE' then PLAN='MEDICARE ADVANTAGE';              
ELSE IF PROD_LVL_4_DESC='MEDICARE SUPPLEMENT' then PLAN='MEDICARE SUPPLEMENT';          
ELSE IF MBU_GL_LVL_4_DESC='MEDICARE PROGRAMS' then PLAN=UPCASE('Medicare Other');                                  
ELSE IF (MBU_GL_LVL_4_DESC='COMMERCIAL BUSINESS' and MBU_LVL_1_DESC ='INDIVIDUAL') then 
	PLAN=UPCASE('Commercial Individual');   
ELSE IF (MBU_GL_LVL_4_DESC='COMMERCIAL BUSINESS' and MBU_LVL_1_DESC='LOCAL GROUP') then 
	PLAN=UPCASE('Commercial Local');  
ELSE IF (MBU_LVL_1_DESC='NATIONAL GROUP' and MBU_LVL_2_DESC='BLUE CARD/NASCO PAR') then 
	PLAN=UPCASE('Commercial National Host'); 
ELSE IF (MBU_LVL_1_DESC='NATIONAL GROUP' and MBU_LVL_2_DESC='HOME') then PLAN=UPCASE('Commercial National Home');    
ELSE IF (MBU_GL_LVL_4_DESC='COMMERCIAL BUSINESS' and  MBU_LVL_1_DESC='NATIONAL GROUP') then 
	PLAN=UPCASE('Commercial National');  
ELSE IF MBU_GL_LVL_4_DESC='COMMERCIAL BUSINESS' then PLAN='Commercial Other';     
else PLAN=UPCASE('Other'); 

FACNAME_HOPPA2=UPCASE(FACNAME_HOPPA);
IF &FACIDVAR="UNK" THEN FACNAME_HOPPA2=" ";

SURGEON_NAME2=UPCASE(SURGEON_NAME);
IF SURGEON_NPI="UNK" THEN SURGEON_NAME2=" ";

*NOTE: THERE ISN'T CURRENTLY A PHYSICIAN GROUP NAME VARIABLE FOR THR/TKR. IF A PHYSICIAN GROUP NAME VARIABLE
GETS ADDED THEN YOU CAN REPLACE indx_PROV_NM (HERE AND IN CODE BELOW) WITH IT AND THIS CODE WILL USE THE 
MOST FREQUENT PHYSICIAN GROUP NAME PER TIN*; 
indx_PROV_NM2=indx_PROV_NM;
IF SURGEON_TIN="UNK" OR indx_PROV_NM="UNK" THEN indx_PROV_NM2=" ";

IF PROD_LVL_2_DESC IN ('PPO','OTHER','FFS') THEN PROD='PPO';
ELSE IF PROD_LVL_2_DESC=' ' THEN PROD='UNK';
ELSE PROD='HMO';

RUN;

*EXTRACTING INDIVIDUAL SURGEONS - USING MOST FREQUENT SURGEON NAME PER NPI*;
PROC SQL;
CREATE TABLE TAB_SURG AS 
SELECT SURGEON_NPI, SURGEON_NAME2,
COUNT(*) AS SURG_FREQ
FROM ELIGIBLE_&STATE
GROUP BY SURGEON_NPI,SURGEON_NAME2
ORDER BY SURGEON_NPI, CALCULATED SURG_FREQ DESC, SURGEON_NAME2;
QUIT;

DATA TAB_1ST_SURG;
SET TAB_SURG;
*ONLY TAKING THE FIRST NAME/NPI COMBO IF THE SURGEON NAME/NPI IS MISSING*;
/*IF SURGEON_NPI NE ' ' THEN DO;*/
	BY SURGEON_NPI;
	IF FIRST.SURGEON_NPI;

/*IF SURGEON_NPI="UNK" THEN SURGEON_NAME2=" ";*/
/*END;*/

RUN;

*EXTRACTING INDIVIDUAL PHYSICIAN GROUP - USING MOST FREQUENT PHYSICIAN GROUP NAME*;
PROC SQL;
CREATE TABLE TAB_PG AS 
SELECT SURGEON_TIN, indx_PROV_NM2,
COUNT(*) AS PG_FREQ
FROM ELIGIBLE_&STATE
GROUP BY SURGEON_TIN, indx_PROV_NM2
ORDER BY SURGEON_TIN, CALCULATED PG_FREQ DESC, indx_PROV_NM2;
QUIT;

DATA TAB_1ST_PG;
SET TAB_PG;
	BY SURGEON_TIN;
	IF FIRST.SURGEON_TIN;

/*IF SURGEON_TIN="UNK" THEN indx_PROV_NM=" ";*/
RUN;

*EXTRACTING INDIVIDUAL FACILITIES - USING MOST FREQUENT FACILITY NAME*;
PROC SQL;
CREATE TABLE TAB_FAC AS 
SELECT &FACIDVAR, FACNAME_HOPPA2,
COUNT(*) AS FAC_FREQ
FROM ELIGIBLE_&STATE
GROUP BY &FACIDVAR, FACNAME_HOPPA2
ORDER BY &FACIDVAR, CALCULATED FAC_FREQ DESC, FACNAME_HOPPA2;
QUIT;

DATA TAB_1ST_FAC;
SET TAB_FAC;
	BY &FACIDVAR;
	IF FIRST.&FACIDVAR;
/*IF &FACIDVAR="UNK" THEN FACNAME_HOPPA2=" ";*/
RUN;

*REMERGING DATASET WITH NAME CORRECTIONS FOR PHYSICIAN, FACILITY AND PHYSICIAN GROUP. DATASET ONLY CONTAINS ELIGIBLE
CASES*;
PROC SQL;
CREATE TABLE NEW_&BUNDLE AS 
SELECT A.*,B.SURGEON_NAME2, C.indx_PROV_NM2, D.FACNAME_HOPPA2
FROM ELIGIBLE_&STATE (DROP=SURGEON_NAME2 indx_PROV_NM2 FACNAME_HOPPA2) A
LEFT JOIN TAB_1ST_SURG B
ON A.SURGEON_NPI=B.SURGEON_NPI
LEFT JOIN TAB_1ST_PG C 
ON A.SURGEON_TIN=C.SURGEON_TIN
LEFT JOIN TAB_1ST_FAC D
ON A.&FACIDVAR=D.&FACIDVAR;
QUIT;

*MARKET SUMMARY TAB*;
PROC SQL;
SELECT DISTINCT 
COUNT(*)
INTO :N_ELIGIBLE_&BUNDLE 
FROM NEW_&BUNDLE;
QUIT;

/*MARKET SUMMARY TAB*/
%MACRO SUMMARY_TAB;

*STRATIFYING BY PLACE OF SERVICE, LOB, PLAN, PRODUCT, FUNDING;
*NOT SURE WHETHER STILL NEED TO DO LOB SINCE IT SHOULD BE ALL COMMERCIAL (FEP WILL BE INCLUDED IN COMMERCIAL)?
I THINK THATS WHAT WAS DONE FOR MAT BUT YOU SHOULD DOUBLE CHECK*;
%LET VARLIST=SRVC MBU_GL_LVL_4_DESC PLAN PROD FUNDG_TYPE_LVL_1_DESC;
%LET NAMELIST=SITESERV LOB PLAN PRODUCT FUNDING;

%DO B=1 %TO 5;
	%LET STRATVAR=%SCAN(&VARLIST, &B, %STR( ));
	%LET NAMEVAR=%SCAN(&NAMELIST, &B, %STR( ));
	
PROC SQL;
CREATE TABLE &NAMEVAR._1 AS 
SELECT &STRATVAR,
COUNT(*) AS ELIG,
CALCULATED ELIG/&&N_ELIGIBLE_&BUNDLE AS MKTSHARE,
SUM(COMPL_FLG)/CALCULATED ELIG AS COMPL_PER,
SUM(REVISE_FLG)/CALCULATED ELIG AS REVISE_PER,
SUM(READMISSION)/CALCULATED ELIG AS READMIT_PER,

MEAN(index_fac_cost_PCR) AS INDX_FAC_MEAN,
MEAN(index_prof_cost_PCR) AS INDX_PROF_MEAN,
MEAN(index_tot_cost_PCR) AS INDX_TOT_MEAN,
MEAN(postindex_fac_cost_PCR) AS POST_FAC_MEAN,
MEAN(postindex_prof_cost_PCR) AS POST_PROF_MEAN,
MEAN(postindex_tot_cost_PCR) AS POST_TOT_MEAN,
MEAN(bundlecost_tot_PCR) AS BUNDLEMEAN,

MEDIAN(index_fac_cost_PCR) AS INDX_FAC_MEDIAN,
MEDIAN(index_prof_cost_PCR) AS INDX_PROF_MEDIAN,
MEDIAN(index_tot_cost_PCR) AS INDX_TOT_MEDIAN,
MEDIAN(postindex_fac_cost_PCR) AS POST_FAC_MEDIAN,
MEDIAN(postindex_prof_cost_PCR) AS POST_PROF_MEDIAN,
MEDIAN(postindex_tot_cost_PCR) AS POST_TOT_MEDIAN,
MEDIAN(bundlecost_tot_PCR) AS BUNDLEMEDIAN,

STD(index_fac_cost_PCR) AS INDX_FAC_STD,
STD(index_prof_cost_PCR) AS INDX_PROF_STD,
STD(index_tot_cost_PCR) AS INDX_TOT_STD,
STD(postindex_fac_cost_PCR) AS POST_FAC_STD,
STD(postindex_prof_cost_PCR) AS POST_PROF_STD,
STD(postindex_tot_cost_PCR) AS POST_TOT_STD,
STD(bundlecost_tot_PCR) AS BUNDLESTD,

MIN(bundlecost_tot_PCR) AS BUNDLEMIN,
MAX(bundlecost_tot_PCR) AS BUNDLEMAX,
SUM(bundlecost_tot_PCR) AS BUNDLE_SUM,
SUM(FUNDG_TYPE_LVL_1_DESC='INSURED')/CALCULATED ELIG AS FI_PER

FROM NEW_&BUNDLE
GROUP BY &STRATVAR
ORDER BY ELIG DESC;
QUIT;

PROC SORT DATA=NEW_&BUNDLE; BY &STRATVAR; RUN;

proc means data=NEW_&BUNDLE n Q1 Q3 maxdec=0 QRANGE; 
var bundlecost_tot_PCR;
OUTPUT OUT=&NAMEVAR._2 Q1=BUNDLE_Q1 Q3=BUNDLE_Q3 QRANGE=BUNDLE_IQR;
BY &STRATVAR; 
RUN;

PROC SQL;
CREATE TABLE &NAMEVAR AS
SELECT A.*, B.BUNDLE_Q1, B.BUNDLE_Q3, B.BUNDLE_IQR
FROM &NAMEVAR._1 A, &NAMEVAR._2 B
WHERE A.&STRATVAR=B.&STRATVAR;
QUIT;

%END;

%MEND SUMMARY_TAB;
%SUMMARY_TAB;


*TABLE BY SITE OF SERVICE, LINE OF BUSINESS, PLAN, PRODUCT, FUNDING ARRANGEMENT, # ELIGIBLE EPISODES, PERCENT
OF MARKET SHARE, AND COST AND QUALITY METRICS NUMBERS. ORDER BY ELIGIBLE EPISODES*;

PROC SORT DATA=NEW_&BUNDLE; BY SRVC SRVC2 MBU_GL_LVL_4_DESC PLAN PROD FUNDG_TYPE_LVL_1_DESC; RUN;

proc means data=NEW_&BUNDLE n Q1 Q3 maxdec=0 QRANGE; 
var bundlecost_tot_PCR;
OUTPUT OUT=TAB_ALL_QUARTS Q1=BUNDLE_Q1 Q3=BUNDLE_Q3 QRANGE=BUNDLE_IQR;
BY SRVC SRVC2 MBU_GL_LVL_4_DESC PLAN PROD FUNDG_TYPE_LVL_1_DESC; 
RUN;

PROC SQL;
CREATE TABLE TAB_ALL AS
SELECT SRVC, SRVC2, MBU_GL_LVL_4_DESC, PLAN, PROD, FUNDG_TYPE_LVL_1_DESC, 
COUNT(*) AS ELIG,
CALCULATED ELIG/&&N_ELIGIBLE_&BUNDLE AS MKTSHARE,

SUM(COMPL_FLG)/CALCULATED ELIG AS COMPL_PER,
SUM(REVISE_FLG)/CALCULATED ELIG AS REVISE_PER,
SUM(READMISSION)/CALCULATED ELIG AS READMIT_PER,

MEAN(index_fac_cost_PCR) AS INDX_FAC_MEAN,
MEAN(index_prof_cost_PCR) AS INDX_PROF_MEAN,
MEAN(index_tot_cost_PCR) AS INDX_TOT_MEAN,
MEAN(postindex_fac_cost_PCR) AS POST_FAC_MEAN,
MEAN(postindex_prof_cost_PCR) AS POST_PROF_MEAN,
MEAN(postindex_tot_cost_PCR) AS POST_TOT_MEAN,
MEAN(bundlecost_tot_PCR) AS BUNDLEMEAN,

MEDIAN(index_fac_cost_PCR) AS INDX_FAC_MEDIAN,
MEDIAN(index_prof_cost_PCR) AS INDX_PROF_MEDIAN,
MEDIAN(index_tot_cost_PCR) AS INDX_TOT_MEDIAN,
MEDIAN(postindex_fac_cost_PCR) AS POST_FAC_MEDIAN,
MEDIAN(postindex_prof_cost_PCR) AS POST_PROF_MEDIAN,
MEDIAN(postindex_tot_cost_PCR) AS POST_TOT_MEDIAN,
MEDIAN(bundlecost_tot_PCR) AS BUNDLEMEDIAN,

STD(index_fac_cost_PCR) AS INDX_FAC_STD,
STD(index_prof_cost_PCR) AS INDX_PROF_STD,
STD(index_tot_cost_PCR) AS INDX_TOT_STD,
STD(postindex_fac_cost_PCR) AS POST_FAC_STD,
STD(postindex_prof_cost_PCR) AS POST_PROF_STD,
STD(postindex_tot_cost_PCR) AS POST_TOT_STD,
STD(bundlecost_tot_PCR) AS BUNDLESTD,

MIN(bundlecost_tot_PCR) AS BUNDLEMIN,
MAX(bundlecost_tot_PCR) AS BUNDLEMAX,
SUM(bundlecost_tot_PCR) AS BUNDLE_SUM,
SUM(FUNDG_TYPE_LVL_1_DESC='INSURED')/CALCULATED ELIG AS FI_PER

FROM NEW_&BUNDLE
GROUP BY SRVC, SRVC2, MBU_GL_LVL_4_DESC, PLAN, PROD, FUNDG_TYPE_LVL_1_DESC;

CREATE TABLE TAB_ALL_FINAL AS
SELECT A.*, B.BUNDLE_Q1, B.BUNDLE_Q3, B.BUNDLE_IQR
FROM TAB_ALL A, TAB_ALL_QUARTS B
WHERE A.SRVC=B.SRVC AND A.SRVC2=B.SRVC2 AND A.MBU_GL_LVL_4_DESC=B.MBU_GL_LVL_4_DESC AND A.PLAN=B.PLAN AND
A.PROD=B.PROD AND A.FUNDG_TYPE_LVL_1_DESC=B.FUNDG_TYPE_LVL_1_DESC
ORDER BY ELIG DESC;
QUIT;


*MARKET BY COUNTY TAB*;

PROC SORT DATA=NEW_&BUNDLE; BY COUNTY_HOPPA; RUN;

proc means data=NEW_&BUNDLE n Q1 Q3 maxdec=0 QRANGE; 
var bundlecost_tot_PCR;
OUTPUT OUT=COUNTY_2 Q1=BUNDLE_Q1 Q3=BUNDLE_Q3 QRANGE=BUNDLE_IQR;
BY COUNTY_HOPPA; 
RUN;

proc means data=NEW_&BUNDLE n Q1 Q3 maxdec=0 QRANGE; 
var bundlecost_tot_PCR;
OUTPUT OUT=COUNTY_SUM_2 Q1=BUNDLE_Q1 Q3=BUNDLE_Q3 QRANGE=BUNDLE_IQR;
RUN;

PROC SQL;
CREATE TABLE COUNTY_1 AS 
SELECT COUNTY_HOPPA,
COUNT(*) AS ELIG,
CALCULATED ELIG/&&N_ELIGIBLE_&BUNDLE AS MKTSHARE,

SUM(COMPL_FLG)/CALCULATED ELIG AS COMPL_PER,
SUM(REVISE_FLG)/CALCULATED ELIG AS REVISE_PER,
SUM(READMISSION)/CALCULATED ELIG AS READMIT_PER,

MEAN(index_fac_cost_PCR) AS INDX_FAC_MEAN,
MEAN(index_prof_cost_PCR) AS INDX_PROF_MEAN,
MEAN(index_tot_cost_PCR) AS INDX_TOT_MEAN,
MEAN(postindex_fac_cost_PCR) AS POST_FAC_MEAN,
MEAN(postindex_prof_cost_PCR) AS POST_PROF_MEAN,
MEAN(postindex_tot_cost_PCR) AS POST_TOT_MEAN,
MEAN(bundlecost_tot_PCR) AS BUNDLEMEAN,

MEDIAN(index_fac_cost_PCR) AS INDX_FAC_MEDIAN,
MEDIAN(index_prof_cost_PCR) AS INDX_PROF_MEDIAN,
MEDIAN(index_tot_cost_PCR) AS INDX_TOT_MEDIAN,
MEDIAN(postindex_fac_cost_PCR) AS POST_FAC_MEDIAN,
MEDIAN(postindex_prof_cost_PCR) AS POST_PROF_MEDIAN,
MEDIAN(postindex_tot_cost_PCR) AS POST_TOT_MEDIAN,
MEDIAN(bundlecost_tot_PCR) AS BUNDLEMEDIAN,

STD(index_fac_cost_PCR) AS INDX_FAC_STD,
STD(index_prof_cost_PCR) AS INDX_PROF_STD,
STD(index_tot_cost_PCR) AS INDX_TOT_STD,
STD(postindex_fac_cost_PCR) AS POST_FAC_STD,
STD(postindex_prof_cost_PCR) AS POST_PROF_STD,
STD(postindex_tot_cost_PCR) AS POST_TOT_STD,
STD(bundlecost_tot_PCR) AS BUNDLESTD,

MIN(bundlecost_tot_PCR) AS BUNDLEMIN,
MAX(bundlecost_tot_PCR) AS BUNDLEMAX,
SUM(bundlecost_tot_PCR) AS BUNDLE_SUM,
SUM(FUNDG_TYPE_LVL_1_DESC='INSURED')/CALCULATED ELIG AS FI_PER
FROM NEW_&BUNDLE
GROUP BY COUNTY_HOPPA;

CREATE TABLE COUNTY_SUM_1 AS 
SELECT
COUNT(*) AS ELIG,
CALCULATED ELIG/&&N_ELIGIBLE_&BUNDLE AS MKTSHARE,
SUM(COMPL_FLG)/CALCULATED ELIG AS COMPL_PER,
SUM(REVISE_FLG)/CALCULATED ELIG AS REVISE_PER,
SUM(READMISSION)/CALCULATED ELIG AS READMIT_PER,

MEAN(index_fac_cost_PCR) AS INDX_FAC_MEAN,
MEAN(index_prof_cost_PCR) AS INDX_PROF_MEAN,
MEAN(index_tot_cost_PCR) AS INDX_TOT_MEAN,
MEAN(postindex_fac_cost_PCR) AS POST_FAC_MEAN,
MEAN(postindex_prof_cost_PCR) AS POST_PROF_MEAN,
MEAN(postindex_tot_cost_PCR) AS POST_TOT_MEAN,
MEAN(bundlecost_tot_PCR) AS BUNDLEMEAN,

MEDIAN(index_fac_cost_PCR) AS INDX_FAC_MEDIAN,
MEDIAN(index_prof_cost_PCR) AS INDX_PROF_MEDIAN,
MEDIAN(index_tot_cost_PCR) AS INDX_TOT_MEDIAN,
MEDIAN(postindex_fac_cost_PCR) AS POST_FAC_MEDIAN,
MEDIAN(postindex_prof_cost_PCR) AS POST_PROF_MEDIAN,
MEDIAN(postindex_tot_cost_PCR) AS POST_TOT_MEDIAN,
MEDIAN(bundlecost_tot_PCR) AS BUNDLEMEDIAN,

STD(index_fac_cost_PCR) AS INDX_FAC_STD,
STD(index_prof_cost_PCR) AS INDX_PROF_STD,
STD(index_tot_cost_PCR) AS INDX_TOT_STD,
STD(postindex_fac_cost_PCR) AS POST_FAC_STD,
STD(postindex_prof_cost_PCR) AS POST_PROF_STD,
STD(postindex_tot_cost_PCR) AS POST_TOT_STD,
STD(bundlecost_tot_PCR) AS BUNDLESTD,

MIN(bundlecost_tot_PCR) AS BUNDLEMIN,
MAX(bundlecost_tot_PCR) AS BUNDLEMAX,
SUM(bundlecost_tot_PCR) AS BUNDLE_SUM,
SUM(FUNDG_TYPE_LVL_1_DESC='INSURED')/CALCULATED ELIG AS FI_PER,
"Total:" AS COUNTY_HOPPA
FROM NEW_&BUNDLE;

CREATE TABLE COUNTY AS
SELECT A.*, B.BUNDLE_Q1, B.BUNDLE_Q3, B.BUNDLE_IQR
FROM COUNTY_1 A, COUNTY_2 B
WHERE A.COUNTY_HOPPA=B.COUNTY_HOPPA 
ORDER BY ELIG DESC, COUNTY_HOPPA;

CREATE TABLE COUNTY_SUM AS
SELECT A.*, B.BUNDLE_Q1, B.BUNDLE_Q3, B.BUNDLE_IQR
FROM COUNTY_SUM_1 A, COUNTY_SUM_2 B;

QUIT;

*THIS DATA WILL BE OUTPUT*;
DATA COUNTY_FINAL; SET COUNTY COUNTY_SUM; RUN;


/*MARKET BY FACILITY TAB*/
PROC SORT DATA=NEW_&BUNDLE; BY &FACIDVAR Medcr_id_hoppa FACNAME_HOPPA2; RUN;

proc means data=NEW_&BUNDLE n Q1 Q3 maxdec=0 QRANGE; 
var bundlecost_tot_PCR;
OUTPUT OUT=FACILITY_2 Q1=BUNDLE_Q1 Q3=BUNDLE_Q3 QRANGE=BUNDLE_IQR;
BY &FACIDVAR Medcr_id_hoppa FACNAME_HOPPA2; 
RUN;

proc means data=NEW_&BUNDLE n Q1 Q3 maxdec=0 QRANGE; 
var bundlecost_tot_PCR;
OUTPUT OUT=FACILITY_SUM_2 Q1=BUNDLE_Q1 Q3=BUNDLE_Q3 QRANGE=BUNDLE_IQR;
RUN;

PROC SQL;
CREATE TABLE FACILITY_1 AS 
SELECT &FACIDVAR, Medcr_id_hoppa, FACNAME_HOPPA2,
COUNT(*) AS ELIG,
CALCULATED ELIG/&&N_ELIGIBLE_&BUNDLE AS MKTSHARE,

SUM(COMPL_FLG)/CALCULATED ELIG AS COMPL_PER,
SUM(REVISE_FLG)/CALCULATED ELIG AS REVISE_PER,
SUM(READMISSION)/CALCULATED ELIG AS READMIT_PER,

MEAN(index_fac_cost_PCR) AS INDX_FAC_MEAN,
MEAN(index_prof_cost_PCR) AS INDX_PROF_MEAN,
MEAN(index_tot_cost_PCR) AS INDX_TOT_MEAN,
MEAN(postindex_fac_cost_PCR) AS POST_FAC_MEAN,
MEAN(postindex_prof_cost_PCR) AS POST_PROF_MEAN,
MEAN(postindex_tot_cost_PCR) AS POST_TOT_MEAN,
MEAN(bundlecost_tot_PCR) AS BUNDLEMEAN,

MEDIAN(index_fac_cost_PCR) AS INDX_FAC_MEDIAN,
MEDIAN(index_prof_cost_PCR) AS INDX_PROF_MEDIAN,
MEDIAN(index_tot_cost_PCR) AS INDX_TOT_MEDIAN,
MEDIAN(postindex_fac_cost_PCR) AS POST_FAC_MEDIAN,
MEDIAN(postindex_prof_cost_PCR) AS POST_PROF_MEDIAN,
MEDIAN(postindex_tot_cost_PCR) AS POST_TOT_MEDIAN,
MEDIAN(bundlecost_tot_PCR) AS BUNDLEMEDIAN,

STD(index_fac_cost_PCR) AS INDX_FAC_STD,
STD(index_prof_cost_PCR) AS INDX_PROF_STD,
STD(index_tot_cost_PCR) AS INDX_TOT_STD,
STD(postindex_fac_cost_PCR) AS POST_FAC_STD,
STD(postindex_prof_cost_PCR) AS POST_PROF_STD,
STD(postindex_tot_cost_PCR) AS POST_TOT_STD,
STD(bundlecost_tot_PCR) AS BUNDLESTD,

MIN(bundlecost_tot_PCR) AS BUNDLEMIN,
MAX(bundlecost_tot_PCR) AS BUNDLEMAX,
SUM(bundlecost_tot_PCR) AS BUNDLE_SUM,
SUM(FUNDG_TYPE_LVL_1_DESC='INSURED')/CALCULATED ELIG AS FI_PER

FROM NEW_&BUNDLE
GROUP BY &FACIDVAR, Medcr_id_hoppa, FACNAME_HOPPA2
ORDER BY ELIG DESC, &FACIDVAR, FACNAME_HOPPA2;

CREATE TABLE FACILITY_SUM_1 AS 
SELECT
COUNT(*) AS ELIG,
CALCULATED ELIG/&&N_ELIGIBLE_&BUNDLE AS MKTSHARE,
SUM(COMPL_FLG)/CALCULATED ELIG AS COMPL_PER,
SUM(REVISE_FLG)/CALCULATED ELIG AS REVISE_PER,
SUM(READMISSION)/CALCULATED ELIG AS READMIT_PER,

MEAN(index_fac_cost_PCR) AS INDX_FAC_MEAN,
MEAN(index_prof_cost_PCR) AS INDX_PROF_MEAN,
MEAN(index_tot_cost_PCR) AS INDX_TOT_MEAN,
MEAN(postindex_fac_cost_PCR) AS POST_FAC_MEAN,
MEAN(postindex_prof_cost_PCR) AS POST_PROF_MEAN,
MEAN(postindex_tot_cost_PCR) AS POST_TOT_MEAN,
MEAN(bundlecost_tot_PCR) AS BUNDLEMEAN,

MEDIAN(index_fac_cost_PCR) AS INDX_FAC_MEDIAN,
MEDIAN(index_prof_cost_PCR) AS INDX_PROF_MEDIAN,
MEDIAN(index_tot_cost_PCR) AS INDX_TOT_MEDIAN,
MEDIAN(postindex_fac_cost_PCR) AS POST_FAC_MEDIAN,
MEDIAN(postindex_prof_cost_PCR) AS POST_PROF_MEDIAN,
MEDIAN(postindex_tot_cost_PCR) AS POST_TOT_MEDIAN,
MEDIAN(bundlecost_tot_PCR) AS BUNDLEMEDIAN,

STD(index_fac_cost_PCR) AS INDX_FAC_STD,
STD(index_prof_cost_PCR) AS INDX_PROF_STD,
STD(index_tot_cost_PCR) AS INDX_TOT_STD,
STD(postindex_fac_cost_PCR) AS POST_FAC_STD,
STD(postindex_prof_cost_PCR) AS POST_PROF_STD,
STD(postindex_tot_cost_PCR) AS POST_TOT_STD,
STD(bundlecost_tot_PCR) AS BUNDLESTD,

MIN(bundlecost_tot_PCR) AS BUNDLEMIN,
MAX(bundlecost_tot_PCR) AS BUNDLEMAX,
SUM(bundlecost_tot_PCR) AS BUNDLE_SUM,
SUM(FUNDG_TYPE_LVL_1_DESC='INSURED')/CALCULATED ELIG AS FI_PER,
"Total:" AS &FACIDVAR
FROM NEW_&BUNDLE;

CREATE TABLE FACILITY AS
SELECT A.*, B.BUNDLE_Q1, B.BUNDLE_Q3, B.BUNDLE_IQR
FROM FACILITY_1 A, FACILITY_2 B
WHERE A.&FACIDVAR=B.&FACIDVAR AND A.Medcr_id_hoppa=B.Medcr_id_hoppa AND A.FACNAME_HOPPA2=B.FACNAME_HOPPA2
ORDER BY ELIG DESC, &FACIDVAR, FACNAME_HOPPA2;

CREATE TABLE FACILITY_SUM AS
SELECT A.*, B.BUNDLE_Q1, B.BUNDLE_Q3, B.BUNDLE_IQR
FROM FACILITY_SUM_1 A, FACILITY_SUM_2 B;

QUIT;

*THIS DATASET WILL BE OUTPUT*;
DATA FACILITY_FINAL; SET FACILITY FACILITY_SUM; RUN;


/*MARKET BY SURGEON TAB*/
/*SAME SURGEON NPI, SORTED ON FACILITY TAX ID, FACILITY NAME, AND PHYSICIAN GROUP TAX ID*/

PROC SORT DATA=NEW_&BUNDLE; BY SURGEON_NPI SURGEON_NAME2 billg_tax_id_hoppa surgeon_tin FACNAME_HOPPA2 Medcr_id_hoppa; RUN;

proc means data=NEW_&BUNDLE n Q1 Q3 maxdec=0 QRANGE; 
var bundlecost_tot_PCR;
OUTPUT OUT=SURGEON_2 Q1=BUNDLE_Q1 Q3=BUNDLE_Q3 QRANGE=BUNDLE_IQR;
BY SURGEON_NPI SURGEON_NAME2 billg_tax_id_hoppa surgeon_tin FACNAME_HOPPA2 Medcr_id_hoppa; 
RUN;

proc means data=NEW_&BUNDLE n Q1 Q3 maxdec=0 QRANGE; 
var bundlecost_tot_PCR;
OUTPUT OUT=SURGEON_SUM_2 Q1=BUNDLE_Q1 Q3=BUNDLE_Q3 QRANGE=BUNDLE_IQR;
RUN;


PROC SQL;
CREATE TABLE SURGEON_1 AS 
SELECT SURGEON_NPI, SURGEON_NAME2, billg_tax_id_hoppa, surgeon_tin, FACNAME_HOPPA2, Medcr_id_hoppa,
COUNT(*) AS ELIG,
CALCULATED ELIG/&&N_ELIGIBLE_&BUNDLE AS MKTSHARE,
SUM(COMPL_FLG)/CALCULATED ELIG AS COMPL_PER,
SUM(REVISE_FLG)/CALCULATED ELIG AS REVISE_PER,
SUM(READMISSION)/CALCULATED ELIG AS READMIT_PER,

MEAN(index_fac_cost_PCR) AS INDX_FAC_MEAN,
MEAN(index_prof_cost_PCR) AS INDX_PROF_MEAN,
MEAN(index_tot_cost_PCR) AS INDX_TOT_MEAN,
MEAN(postindex_fac_cost_PCR) AS POST_FAC_MEAN,
MEAN(postindex_prof_cost_PCR) AS POST_PROF_MEAN,
MEAN(postindex_tot_cost_PCR) AS POST_TOT_MEAN,
MEAN(bundlecost_tot_PCR) AS BUNDLEMEAN,

MEDIAN(index_fac_cost_PCR) AS INDX_FAC_MEDIAN,
MEDIAN(index_prof_cost_PCR) AS INDX_PROF_MEDIAN,
MEDIAN(index_tot_cost_PCR) AS INDX_TOT_MEDIAN,
MEDIAN(postindex_fac_cost_PCR) AS POST_FAC_MEDIAN,
MEDIAN(postindex_prof_cost_PCR) AS POST_PROF_MEDIAN,
MEDIAN(postindex_tot_cost_PCR) AS POST_TOT_MEDIAN,
MEDIAN(bundlecost_tot_PCR) AS BUNDLEMEDIAN,

STD(index_fac_cost_PCR) AS INDX_FAC_STD,
STD(index_prof_cost_PCR) AS INDX_PROF_STD,
STD(index_tot_cost_PCR) AS INDX_TOT_STD,
STD(postindex_fac_cost_PCR) AS POST_FAC_STD,
STD(postindex_prof_cost_PCR) AS POST_PROF_STD,
STD(postindex_tot_cost_PCR) AS POST_TOT_STD,
STD(bundlecost_tot_PCR) AS BUNDLESTD,

MIN(bundlecost_tot_PCR) AS BUNDLEMIN,
MAX(bundlecost_tot_PCR) AS BUNDLEMAX,
SUM(bundlecost_tot_PCR) AS BUNDLE_SUM,
SUM(FUNDG_TYPE_LVL_1_DESC='INSURED')/CALCULATED ELIG AS FI_PER

FROM NEW_&BUNDLE
GROUP BY SURGEON_NPI, SURGEON_NAME2, billg_tax_id_hoppa, surgeon_tin, FACNAME_HOPPA2, Medcr_id_hoppa
ORDER BY ELIG DESC, SURGEON_NAME2, FACNAME_HOPPA2;

CREATE TABLE SURGEON_SUM_1 AS 
SELECT
COUNT(*) AS ELIG,
CALCULATED ELIG/&&N_ELIGIBLE_&BUNDLE AS MKTSHARE,
SUM(COMPL_FLG)/CALCULATED ELIG AS COMPL_PER,
SUM(REVISE_FLG)/CALCULATED ELIG AS REVISE_PER,
SUM(READMISSION)/CALCULATED ELIG AS READMIT_PER,

MEAN(index_fac_cost_PCR) AS INDX_FAC_MEAN,
MEAN(index_prof_cost_PCR) AS INDX_PROF_MEAN,
MEAN(index_tot_cost_PCR) AS INDX_TOT_MEAN,
MEAN(postindex_fac_cost_PCR) AS POST_FAC_MEAN,
MEAN(postindex_prof_cost_PCR) AS POST_PROF_MEAN,
MEAN(postindex_tot_cost_PCR) AS POST_TOT_MEAN,
MEAN(bundlecost_tot_PCR) AS BUNDLEMEAN,

MEDIAN(index_fac_cost_PCR) AS INDX_FAC_MEDIAN,
MEDIAN(index_prof_cost_PCR) AS INDX_PROF_MEDIAN,
MEDIAN(index_tot_cost_PCR) AS INDX_TOT_MEDIAN,
MEDIAN(postindex_fac_cost_PCR) AS POST_FAC_MEDIAN,
MEDIAN(postindex_prof_cost_PCR) AS POST_PROF_MEDIAN,
MEDIAN(postindex_tot_cost_PCR) AS POST_TOT_MEDIAN,
MEDIAN(bundlecost_tot_PCR) AS BUNDLEMEDIAN,

STD(index_fac_cost_PCR) AS INDX_FAC_STD,
STD(index_prof_cost_PCR) AS INDX_PROF_STD,
STD(index_tot_cost_PCR) AS INDX_TOT_STD,
STD(postindex_fac_cost_PCR) AS POST_FAC_STD,
STD(postindex_prof_cost_PCR) AS POST_PROF_STD,
STD(postindex_tot_cost_PCR) AS POST_TOT_STD,
STD(bundlecost_tot_PCR) AS BUNDLESTD,

MIN(bundlecost_tot_PCR) AS BUNDLEMIN,
MAX(bundlecost_tot_PCR) AS BUNDLEMAX,
SUM(bundlecost_tot_PCR) AS BUNDLE_SUM,
SUM(FUNDG_TYPE_LVL_1_DESC='INSURED')/CALCULATED ELIG AS FI_PER,
"Total:" AS SURGEON_NAME2
FROM NEW_&BUNDLE;

CREATE TABLE SURGEON AS
SELECT A.*, B.BUNDLE_Q1, B.BUNDLE_Q3, B.BUNDLE_IQR
FROM SURGEON_1 A, SURGEON_2 B
WHERE A.SURGEON_NPI=B.SURGEON_NPI AND A.SURGEON_NAME2=B.SURGEON_NAME2 AND A.billg_tax_id_hoppa=B.billg_tax_id_hoppa AND 
A.surgeon_tin=B.surgeon_tin AND A.FACNAME_HOPPA2=B.FACNAME_HOPPA2 AND A.Medcr_id_hoppa=B.Medcr_id_hoppa
ORDER BY ELIG DESC, SURGEON_NAME2, FACNAME_HOPPA2;

CREATE TABLE SURGEON_SUM AS
SELECT A.*, B.BUNDLE_Q1, B.BUNDLE_Q3, B.BUNDLE_IQR
FROM SURGEON_SUM_1 A, SURGEON_SUM_2 B;

QUIT;

*THIS DATASET WILL BE OUTPUT*;
DATA SURGEON_FINAL; SET SURGEON SURGEON_SUM; RUN;
TITLE;

/*MARKET BY PHYSICIAN GROUP TAB*/

PROC SORT DATA=NEW_&BUNDLE; BY SURGEON_TIN; RUN;

proc means data=NEW_&BUNDLE n Q1 Q3 maxdec=0 QRANGE; 
var bundlecost_tot_PCR;
OUTPUT OUT=PG_2 Q1=BUNDLE_Q1 Q3=BUNDLE_Q3 QRANGE=BUNDLE_IQR;
BY SURGEON_TIN; 
RUN;

proc means data=NEW_&BUNDLE n Q1 Q3 QRANGE maxdec=0; 
var bundlecost_tot_PCR;
OUTPUT OUT=PG_SUM_2 Q1=BUNDLE_Q1 Q3=BUNDLE_Q3 QRANGE=BUNDLE_IQR;
RUN;


PROC SQL;
CREATE TABLE PG_1 AS 
SELECT DISTINCT SURGEON_TIN, indx_PROV_NM2, 
COUNT(*) AS ELIG,
CALCULATED ELIG/&&N_ELIGIBLE_&BUNDLE AS MKTSHARE,
SUM(COMPL_FLG)/CALCULATED ELIG AS COMPL_PER,
SUM(REVISE_FLG)/CALCULATED ELIG AS REVISE_PER,
SUM(READMISSION)/CALCULATED ELIG AS READMIT_PER,

MEAN(index_fac_cost_PCR) AS INDX_FAC_MEAN,
MEAN(index_prof_cost_PCR) AS INDX_PROF_MEAN,
MEAN(index_tot_cost_PCR) AS INDX_TOT_MEAN,
MEAN(postindex_fac_cost_PCR) AS POST_FAC_MEAN,
MEAN(postindex_prof_cost_PCR) AS POST_PROF_MEAN,
MEAN(postindex_tot_cost_PCR) AS POST_TOT_MEAN,
MEAN(bundlecost_tot_PCR) AS BUNDLEMEAN,

MEDIAN(index_fac_cost_PCR) AS INDX_FAC_MEDIAN,
MEDIAN(index_prof_cost_PCR) AS INDX_PROF_MEDIAN,
MEDIAN(index_tot_cost_PCR) AS INDX_TOT_MEDIAN,
MEDIAN(postindex_fac_cost_PCR) AS POST_FAC_MEDIAN,
MEDIAN(postindex_prof_cost_PCR) AS POST_PROF_MEDIAN,
MEDIAN(postindex_tot_cost_PCR) AS POST_TOT_MEDIAN,
MEDIAN(bundlecost_tot_PCR) AS BUNDLEMEDIAN,

STD(index_fac_cost_PCR) AS INDX_FAC_STD,
STD(index_prof_cost_PCR) AS INDX_PROF_STD,
STD(index_tot_cost_PCR) AS INDX_TOT_STD,
STD(postindex_fac_cost_PCR) AS POST_FAC_STD,
STD(postindex_prof_cost_PCR) AS POST_PROF_STD,
STD(postindex_tot_cost_PCR) AS POST_TOT_STD,
STD(bundlecost_tot_PCR) AS BUNDLESTD,

MIN(bundlecost_tot_PCR) AS BUNDLEMIN,
MAX(bundlecost_tot_PCR) AS BUNDLEMAX,
SUM(bundlecost_tot_PCR) AS BUNDLE_SUM,
SUM(FUNDG_TYPE_LVL_1_DESC='INSURED')/CALCULATED ELIG AS FI_PER
FROM NEW_&BUNDLE
GROUP BY SURGEON_TIN
ORDER BY ELIG DESC;

CREATE TABLE PG_SUM_1 AS 
SELECT
COUNT(*) AS ELIG,
CALCULATED ELIG/&&N_ELIGIBLE_&BUNDLE AS MKTSHARE,
SUM(COMPL_FLG)/CALCULATED ELIG AS COMPL_PER,
SUM(REVISE_FLG)/CALCULATED ELIG AS REVISE_PER,
SUM(READMISSION)/CALCULATED ELIG AS READMIT_PER,

MEAN(index_fac_cost_PCR) AS INDX_FAC_MEAN,
MEAN(index_prof_cost_PCR) AS INDX_PROF_MEAN,
MEAN(index_tot_cost_PCR) AS INDX_TOT_MEAN,
MEAN(postindex_fac_cost_PCR) AS POST_FAC_MEAN,
MEAN(postindex_prof_cost_PCR) AS POST_PROF_MEAN,
MEAN(postindex_tot_cost_PCR) AS POST_TOT_MEAN,
MEAN(bundlecost_tot_PCR) AS BUNDLEMEAN,

MEDIAN(index_fac_cost_PCR) AS INDX_FAC_MEDIAN,
MEDIAN(index_prof_cost_PCR) AS INDX_PROF_MEDIAN,
MEDIAN(index_tot_cost_PCR) AS INDX_TOT_MEDIAN,
MEDIAN(postindex_fac_cost_PCR) AS POST_FAC_MEDIAN,
MEDIAN(postindex_prof_cost_PCR) AS POST_PROF_MEDIAN,
MEDIAN(postindex_tot_cost_PCR) AS POST_TOT_MEDIAN,
MEDIAN(bundlecost_tot_PCR) AS BUNDLEMEDIAN,

STD(index_fac_cost_PCR) AS INDX_FAC_STD,
STD(index_prof_cost_PCR) AS INDX_PROF_STD,
STD(index_tot_cost_PCR) AS INDX_TOT_STD,
STD(postindex_fac_cost_PCR) AS POST_FAC_STD,
STD(postindex_prof_cost_PCR) AS POST_PROF_STD,
STD(postindex_tot_cost_PCR) AS POST_TOT_STD,
STD(bundlecost_tot_PCR) AS BUNDLESTD,

MIN(bundlecost_tot_PCR) AS BUNDLEMIN,
MAX(bundlecost_tot_PCR) AS BUNDLEMAX,
SUM(bundlecost_tot_PCR) AS BUNDLE_SUM,
SUM(FUNDG_TYPE_LVL_1_DESC='INSURED')/CALCULATED ELIG AS FI_PER,
"Total:" AS SURGEON_TIN 
FROM NEW_&BUNDLE;

PROC SQL;
CREATE TABLE PG AS
SELECT A.*, B.BUNDLE_Q1, B.BUNDLE_Q3, B.BUNDLE_IQR
FROM PG_1 A, PG_2 B
WHERE A.SURGEON_TIN=B.SURGEON_TIN 
ORDER BY ELIG DESC;

CREATE TABLE PG_SUM AS
SELECT A.*, B.BUNDLE_Q1, B.BUNDLE_Q3, B.BUNDLE_IQR
FROM PG_SUM_1 A, PG_SUM_2 B;

QUIT;

*THIS DATASET WILL BE OUTPUT*;
DATA PG_FINAL; SET PG PG_SUM; RUN;

TITLE;


*OUTPUTTING*;
ods Tagsets.ExcelXP file="&FILEPATH &STATE MOA &BUNDLE &RELEASE - &SYSDATE..xml" style=SEASIDE
     options(embedded_titles='yes' embedded_footnotes='yes');

*DASHBOARD TAB*;
/*ods tagsets.excelxp options(sheet_name = 'Market Dashboard' sheet_interval='none');*/
/**/
/*PROC REPORT DATA=ALLSTATES_COUNT2 HEADLINE CENTER SPLIT="/";*/
/*COLUMN ("Count of Eligible Episodes for Each Market" STATE ELIGTOT);*/
/*DEFINE STATE/DISPLAY "State" CENTER;*/
/*DEFINE ELIGTOT/DISPLAY "Eligible/Episodes" CENTER style(column)={tagattr='format:#,##0'} ; */
/*RUN;*/
/**/
/*PROC REPORT DATA=FACILITY5 HEADLINE CENTER SPLIT="/";*/
/*COLUMN ("Top 5 Facilities by Total Eligible Episode Bundles" FACNAME_HOPPA2 ELIG_FAC);*/
/*DEFINE FACNAME_HOPPA2/DISPLAY "Facility";*/
/*DEFINE ELIG_FAC/DISPLAY "Eligible/Episodes" CENTER style(column)={tagattr='format:#,##0'} ; */
/*RUN;*/
/**/
/*PROC REPORT DATA=SURGEON5 HEADLINE CENTER SPLIT="/";*/
/*COLUMN ("Top 5 Facilities by Total Eligible Episode Bundles" SURGEON_NAME2 ELIG_SURG);*/
/*DEFINE SURGEON_NAME2/DISPLAY "Surgeon";*/
/*DEFINE ELIG_SURG/DISPLAY "Eligible/Episodes" CENTER style(column)={tagattr='format:#,##0'} ; */
/*RUN;*/
/**/
/*PROC REPORT DATA=ALLSTATES_OUT HEADLINE CENTER SPLIT="/";*/
/*COLUMN ("Total Episode Bundle Costs" BUNDLE_N BUNDLE_Q1 BUNDLE_MEAN BUNDLE_MEDIAN BUNDLE_Q3);*/
/*DEFINE BUNDLE_MEAN/DISPLAY "Mean" RIGHT style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};*/
/*DEFINE BUNDLE_Q1/DISPLAY "1st Quartile" RIGHT style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};*/
/*DEFINE BUNDLE_Q3/DISPLAY "3rd Quartile" RIGHT style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};*/
/*DEFINE BUNDLE_MEDIAN/DISPLAY "Median" RIGHT style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};*/
/*DEFINE BUNDLE_N/DISPLAY "Total Episodes for All Markets" style*/
/*(column)={cellwidth=1.0 in tagattr='format:#,##0'};*/
/*RUN;*/

*WATERFALL TAB*;
ods tagsets.excelxp options(sheet_name = 'Market Data Waterfall' sheet_interval='table');

PROC REPORT DATA=WF_TAB3;
COLUMN VAR1 COL1;
DEFINE VAR1/ DISPLAY "Episode Bundle Distribution" FORMAT=$WF.;
DEFINE COL1/ DISPLAY "Total" CENTER style(column)={tagattr='format:#,##0'};
RUN;

*SUMMARY TAB*;
ods tagsets.excelxp options(sheet_name = 'Market Summary' sheet_interval='none');

/*SITE OF SERVICE*/
PROC REPORT DATA=SITESERV HEADLINE CENTER SPLIT="/";
COLUMN SRVC ELIG MKTSHARE FI_PER 
INDX_FAC_MEDIAN INDX_FAC_MEAN INDX_FAC_STD 
INDX_PROF_MEDIAN INDX_PROF_MEAN INDX_PROF_STD 
INDX_TOT_MEDIAN INDX_TOT_MEAN INDX_TOT_STD 
POST_FAC_MEDIAN POST_FAC_MEAN POST_FAC_STD 
POST_PROF_MEDIAN POST_PROF_MEAN POST_PROF_STD 
POST_TOT_MEDIAN POST_TOT_MEAN POST_TOT_STD 
BUNDLEMEDIAN BUNDLEMEAN BUNDLESTD BUNDLE_Q1 
BUNDLE_Q3 BUNDLE_IQR BUNDLEMIN BUNDLEMAX BUNDLE_SUM COMPL_PER REVISE_PER READMIT_PER;
DEFINE SRVC/DISPLAY "Site of Service" FORMAT=$SRVCNEW.;
DEFINE ELIG/DISPLAY "Count of Eligible Episodes" style(column)={tagattr='format:#,##0'};
DEFINE MKTSHARE/DISPLAY "% of Market/Share" style(column)={tagattr='format:##0.0%'}; 

DEFINE INDX_FAC_MEAN/DISPLAY "Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_MEAN/DISPLAY "Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_MEAN/DISPLAY "Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_MEAN/DISPLAY "Post-Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_MEAN/DISPLAY "Post-Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_MEAN/DISPLAY "Post-Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_MEDIAN/DISPLAY "Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_Median/DISPLAY "Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_Median/DISPLAY "Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_Median/DISPLAY "Post-Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_Median/DISPLAY "Post-Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_Median/DISPLAY "Post-Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_STD/DISPLAY "Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_STD/DISPLAY "Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_STD/DISPLAY "Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_STD/DISPLAY "Post-Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_STD/DISPLAY "Post-Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_STD/DISPLAY "Post-Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE BUNDLEMEDIAN/DISPLAY "Total Episode Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMEAN/DISPLAY "Total Episode Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLESTD/DISPLAY "Total Episode Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q1/DISPLAY "Total Episode Costs/1st Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q3/DISPLAY "Total Episode Costs/3rd Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_IQR/DISPLAY "Total Episode/Costs IQR" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE COMPL_PER/DISPLAY "Complication Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE REVISE_PER/DISPLAY "Revision Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE READMIT_PER/DISPLAY "Readmission Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE FI_PER/DISPLAY "% FI" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE BUNDLEMIN/DISPLAY "Total Episode/Costs Minimum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMAX/DISPLAY "Total Episode/Costs Maximum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_SUM/DISPLAY "Total Episode/Costs Sum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

RUN;

/*LOB*/
PROC REPORT DATA=LOB HEADLINE CENTER SPLIT="/";
COLUMN MBU_GL_LVL_4_DESC ELIG MKTSHARE FI_PER 
INDX_FAC_MEDIAN INDX_FAC_MEAN INDX_FAC_STD 
INDX_PROF_MEDIAN INDX_PROF_MEAN INDX_PROF_STD 
INDX_TOT_MEDIAN INDX_TOT_MEAN INDX_TOT_STD 
POST_FAC_MEDIAN POST_FAC_MEAN POST_FAC_STD 
POST_PROF_MEDIAN POST_PROF_MEAN POST_PROF_STD 
POST_TOT_MEDIAN POST_TOT_MEAN POST_TOT_STD 
BUNDLEMEDIAN BUNDLEMEAN BUNDLESTD BUNDLE_Q1 
BUNDLE_Q3 BUNDLE_IQR BUNDLEMIN BUNDLEMAX BUNDLE_SUM COMPL_PER REVISE_PER READMIT_PER;
DEFINE MBU_GL_LVL_4_DESC/DISPLAY "Line of Business" FORMAT=$LOBF.;
DEFINE ELIG/DISPLAY "Count of Eligible Episodes" style(column)={tagattr='format:#,##0'};
DEFINE MKTSHARE/DISPLAY "% of Market/Share" style(column)={tagattr='format:##0.0%'}; 

DEFINE INDX_FAC_MEAN/DISPLAY "Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_MEAN/DISPLAY "Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_MEAN/DISPLAY "Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_MEAN/DISPLAY "Post-Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_MEAN/DISPLAY "Post-Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_MEAN/DISPLAY "Post-Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_MEDIAN/DISPLAY "Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_Median/DISPLAY "Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_Median/DISPLAY "Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_Median/DISPLAY "Post-Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_Median/DISPLAY "Post-Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_Median/DISPLAY "Post-Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_STD/DISPLAY "Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_STD/DISPLAY "Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_STD/DISPLAY "Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_STD/DISPLAY "Post-Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_STD/DISPLAY "Post-Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_STD/DISPLAY "Post-Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE BUNDLEMEDIAN/DISPLAY "Total Episode Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMEAN/DISPLAY "Total Episode Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLESTD/DISPLAY "Total Episode Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q1/DISPLAY "Total Episode Costs/1st Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q3/DISPLAY "Total Episode Costs/3rd Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_IQR/DISPLAY "Total Episode/Costs IQR" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE COMPL_PER/DISPLAY "Complication Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE REVISE_PER/DISPLAY "Revision Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE READMIT_PER/DISPLAY "Readmission Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE FI_PER/DISPLAY "% FI" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE BUNDLEMIN/DISPLAY "Total Episode/Costs Minimum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMAX/DISPLAY "Total Episode/Costs Maximum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_SUM/DISPLAY "Total Episode/Costs Sum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
RUN;

/*PLAN*/
PROC REPORT DATA=PLAN HEADLINE CENTER SPLIT="/";
COLUMN PLAN ELIG MKTSHARE FI_PER 
INDX_FAC_MEDIAN INDX_FAC_MEAN INDX_FAC_STD 
INDX_PROF_MEDIAN INDX_PROF_MEAN INDX_PROF_STD 
INDX_TOT_MEDIAN INDX_TOT_MEAN INDX_TOT_STD 
POST_FAC_MEDIAN POST_FAC_MEAN POST_FAC_STD 
POST_PROF_MEDIAN POST_PROF_MEAN POST_PROF_STD 
POST_TOT_MEDIAN POST_TOT_MEAN POST_TOT_STD 
BUNDLEMEDIAN BUNDLEMEAN BUNDLESTD BUNDLE_Q1 
BUNDLE_Q3 BUNDLE_IQR BUNDLEMIN BUNDLEMAX BUNDLE_SUM COMPL_PER REVISE_PER READMIT_PER;
DEFINE PLAN/DISPLAY "Plan";
DEFINE ELIG/DISPLAY "Count of Eligible Episodes" style(column)={tagattr='format:#,##0'};
DEFINE MKTSHARE/DISPLAY "% of Market/Share" style(column)={tagattr='format:##0.0%'}; 

DEFINE INDX_FAC_MEAN/DISPLAY "Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_MEAN/DISPLAY "Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_MEAN/DISPLAY "Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_MEAN/DISPLAY "Post-Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_MEAN/DISPLAY "Post-Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_MEAN/DISPLAY "Post-Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_MEDIAN/DISPLAY "Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_Median/DISPLAY "Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_Median/DISPLAY "Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_Median/DISPLAY "Post-Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_Median/DISPLAY "Post-Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_Median/DISPLAY "Post-Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_STD/DISPLAY "Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_STD/DISPLAY "Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_STD/DISPLAY "Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_STD/DISPLAY "Post-Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_STD/DISPLAY "Post-Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_STD/DISPLAY "Post-Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE BUNDLEMEDIAN/DISPLAY "Total Episode Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMEAN/DISPLAY "Total Episode Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLESTD/DISPLAY "Total Episode Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q1/DISPLAY "Total Episode Costs/1st Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q3/DISPLAY "Total Episode Costs/3rd Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_IQR/DISPLAY "Total Episode/Costs IQR" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE COMPL_PER/DISPLAY "Complication Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE REVISE_PER/DISPLAY "Revision Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE READMIT_PER/DISPLAY "Readmission Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE FI_PER/DISPLAY "% FI" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE BUNDLEMIN/DISPLAY "Total Episode/Costs Minimum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMAX/DISPLAY "Total Episode/Costs Maximum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_SUM/DISPLAY "Total Episode/Costs Sum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
RUN;


/*LARGE TABLE OF ALL STRATIFYING VARS*/
PROC REPORT DATA=TAB_ALL_FINAL HEADLINE CENTER SPLIT="/";
COLUMN SRVC MBU_GL_LVL_4_DESC PLAN PROD FUNDG_TYPE_LVL_1_DESC ELIG MKTSHARE FI_PER 
INDX_FAC_MEDIAN INDX_FAC_MEAN INDX_FAC_STD 
INDX_PROF_MEDIAN INDX_PROF_MEAN INDX_PROF_STD 
INDX_TOT_MEDIAN INDX_TOT_MEAN INDX_TOT_STD 
POST_FAC_MEDIAN POST_FAC_MEAN POST_FAC_STD 
POST_PROF_MEDIAN POST_PROF_MEAN POST_PROF_STD 
POST_TOT_MEDIAN POST_TOT_MEAN POST_TOT_STD 
BUNDLEMEDIAN BUNDLEMEAN BUNDLESTD BUNDLE_Q1 
BUNDLE_Q3 BUNDLE_IQR BUNDLEMIN BUNDLEMAX BUNDLE_SUM COMPL_PER REVISE_PER READMIT_PER;
DEFINE SRVC/DISPLAY "Site of Service" FORMAT=$SRVCNEW.;
DEFINE MBU_GL_LVL_4_DESC/DISPLAY "Line of Business" FORMAT=$LOBF.;
DEFINE PLAN/DISPLAY "Plan";
DEFINE PROD/DISPLAY "Product" FORMAT=$PRODUCTF.;
DEFINE FUNDG_TYPE_LVL_1_DESC/DISPLAY "Funding/Arrangement" FORMAT=$FUNDF.;
DEFINE ELIG/DISPLAY "Count of Eligible Episodes" style(column)={tagattr='format:#,##0'};
DEFINE MKTSHARE/DISPLAY "% of Market/Share" style(column)={tagattr='format:##0.0%'}; 

DEFINE INDX_FAC_MEAN/DISPLAY "Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_MEAN/DISPLAY "Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_MEAN/DISPLAY "Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_MEAN/DISPLAY "Post-Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_MEAN/DISPLAY "Post-Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_MEAN/DISPLAY "Post-Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_MEDIAN/DISPLAY "Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_Median/DISPLAY "Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_Median/DISPLAY "Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_Median/DISPLAY "Post-Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_Median/DISPLAY "Post-Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_Median/DISPLAY "Post-Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_STD/DISPLAY "Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_STD/DISPLAY "Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_STD/DISPLAY "Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_STD/DISPLAY "Post-Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_STD/DISPLAY "Post-Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_STD/DISPLAY "Post-Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE BUNDLEMEDIAN/DISPLAY "Total Episode Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMEAN/DISPLAY "Total Episode Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLESTD/DISPLAY "Total Episode Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q1/DISPLAY "Total Episode Costs/1st Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q3/DISPLAY "Total Episode Costs/3rd Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_IQR/DISPLAY "Total Episode/Costs IQR" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE COMPL_PER/DISPLAY "Complication Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE REVISE_PER/DISPLAY "Revision Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE READMIT_PER/DISPLAY "Readmission Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE FI_PER/DISPLAY "% FI" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE BUNDLEMIN/DISPLAY "Total Episode/Costs Minimum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMAX/DISPLAY "Total Episode/Costs Maximum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_SUM/DISPLAY "Total Episode/Costs Sum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
RUN;


/*PRODUCT*/
PROC REPORT DATA=PRODUCT HEADLINE CENTER SPLIT="/";
COLUMN PROD ELIG MKTSHARE FI_PER 
INDX_FAC_MEDIAN INDX_FAC_MEAN INDX_FAC_STD 
INDX_PROF_MEDIAN INDX_PROF_MEAN INDX_PROF_STD 
INDX_TOT_MEDIAN INDX_TOT_MEAN INDX_TOT_STD 
POST_FAC_MEDIAN POST_FAC_MEAN POST_FAC_STD 
POST_PROF_MEDIAN POST_PROF_MEAN POST_PROF_STD 
POST_TOT_MEDIAN POST_TOT_MEAN POST_TOT_STD 
BUNDLEMEDIAN BUNDLEMEAN BUNDLESTD BUNDLE_Q1 
BUNDLE_Q3 BUNDLE_IQR BUNDLEMIN BUNDLEMAX BUNDLE_SUM COMPL_PER REVISE_PER READMIT_PER;
DEFINE PROD/DISPLAY "Product" FORMAT=$PRODUCTF.;
DEFINE ELIG/DISPLAY "Count of Eligible Episodes" style(column)={tagattr='format:#,##0'};
DEFINE MKTSHARE/DISPLAY "% of Market/Share" style(column)={tagattr='format:##0.0%'}; 

DEFINE INDX_FAC_MEAN/DISPLAY "Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_MEAN/DISPLAY "Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_MEAN/DISPLAY "Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_MEAN/DISPLAY "Post-Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_MEAN/DISPLAY "Post-Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_MEAN/DISPLAY "Post-Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_MEDIAN/DISPLAY "Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_Median/DISPLAY "Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_Median/DISPLAY "Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_Median/DISPLAY "Post-Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_Median/DISPLAY "Post-Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_Median/DISPLAY "Post-Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_STD/DISPLAY "Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_STD/DISPLAY "Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_STD/DISPLAY "Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_STD/DISPLAY "Post-Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_STD/DISPLAY "Post-Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_STD/DISPLAY "Post-Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE BUNDLEMEDIAN/DISPLAY "Total Episode Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMEAN/DISPLAY "Total Episode Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLESTD/DISPLAY "Total Episode Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q1/DISPLAY "Total Episode Costs/1st Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q3/DISPLAY "Total Episode Costs/3rd Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_IQR/DISPLAY "Total Episode/Costs IQR" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE COMPL_PER/DISPLAY "Complication Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE REVISE_PER/DISPLAY "Revision Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE READMIT_PER/DISPLAY "Readmission Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE FI_PER/DISPLAY "% FI" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE BUNDLEMIN/DISPLAY "Total Episode/Costs Minimum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMAX/DISPLAY "Total Episode/Costs Maximum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_SUM/DISPLAY "Total Episode/Costs Sum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
RUN;

*FUNDING ARRANGEMENT*;
PROC REPORT DATA=FUNDING HEADLINE CENTER SPLIT="/";
COLUMN FUNDG_TYPE_LVL_1_DESC ELIG MKTSHARE FI_PER 
INDX_FAC_MEDIAN INDX_FAC_MEAN INDX_FAC_STD 
INDX_PROF_MEDIAN INDX_PROF_MEAN INDX_PROF_STD 
INDX_TOT_MEDIAN INDX_TOT_MEAN INDX_TOT_STD 
POST_FAC_MEDIAN POST_FAC_MEAN POST_FAC_STD 
POST_PROF_MEDIAN POST_PROF_MEAN POST_PROF_STD 
POST_TOT_MEDIAN POST_TOT_MEAN POST_TOT_STD 
BUNDLEMEDIAN BUNDLEMEAN BUNDLESTD BUNDLE_Q1 
BUNDLE_Q3 BUNDLE_IQR BUNDLEMIN BUNDLEMAX BUNDLE_SUM COMPL_PER REVISE_PER READMIT_PER;
DEFINE FUNDG_TYPE_LVL_1_DESC/DISPLAY "Funding/Arrangement" FORMAT=$FUND2F.;

DEFINE ELIG/DISPLAY "Count of Eligible Episodes" style(column)={tagattr='format:#,##0'};
DEFINE MKTSHARE/DISPLAY "% of Market/Share" style(column)={tagattr='format:##0.0%'}; 

DEFINE INDX_FAC_MEAN/DISPLAY "Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_MEAN/DISPLAY "Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_MEAN/DISPLAY "Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_MEAN/DISPLAY "Post-Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_MEAN/DISPLAY "Post-Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_MEAN/DISPLAY "Post-Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_MEDIAN/DISPLAY "Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_Median/DISPLAY "Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_Median/DISPLAY "Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_Median/DISPLAY "Post-Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_Median/DISPLAY "Post-Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_Median/DISPLAY "Post-Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_STD/DISPLAY "Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_STD/DISPLAY "Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_STD/DISPLAY "Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_STD/DISPLAY "Post-Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_STD/DISPLAY "Post-Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_STD/DISPLAY "Post-Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE BUNDLEMEDIAN/DISPLAY "Total Episode Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMEAN/DISPLAY "Total Episode Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLESTD/DISPLAY "Total Episode Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q1/DISPLAY "Total Episode Costs/1st Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q3/DISPLAY "Total Episode Costs/3rd Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_IQR/DISPLAY "Total Episode/Costs IQR" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE COMPL_PER/DISPLAY "Complication Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE REVISE_PER/DISPLAY "Revision Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE READMIT_PER/DISPLAY "Readmission Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE FI_PER/DISPLAY "% FI" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE BUNDLEMIN/DISPLAY "Total Episode/Costs Minimum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMAX/DISPLAY "Total Episode/Costs Maximum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_SUM/DISPLAY "Total Episode/Costs Sum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
RUN;

ods tagsets.excelxp options(sheet_name = 'Market by County' sheet_interval='table');

PROC REPORT DATA=COUNTY_FINAL HEADLINE CENTER SPLIT="/";
COLUMN COUNTY_HOPPA ELIG MKTSHARE FI_PER 
INDX_FAC_MEDIAN INDX_FAC_MEAN INDX_FAC_STD 
INDX_PROF_MEDIAN INDX_PROF_MEAN INDX_PROF_STD 
INDX_TOT_MEDIAN INDX_TOT_MEAN INDX_TOT_STD 
POST_FAC_MEDIAN POST_FAC_MEAN POST_FAC_STD 
POST_PROF_MEDIAN POST_PROF_MEAN POST_PROF_STD 
POST_TOT_MEDIAN POST_TOT_MEAN POST_TOT_STD 
BUNDLEMEDIAN BUNDLEMEAN BUNDLESTD BUNDLE_Q1 
BUNDLE_Q3 BUNDLE_IQR BUNDLEMIN BUNDLEMAX BUNDLE_SUM COMPL_PER REVISE_PER READMIT_PER;
DEFINE COUNTY_HOPPA/DISPLAY "Facility County" ;
DEFINE ELIG/DISPLAY "Count of Eligible Episodes" style(column)={tagattr='format:#,##0'};
DEFINE MKTSHARE/DISPLAY "% of Market/Share" style(column)={tagattr='format:##0.0%'}; 

DEFINE INDX_FAC_MEAN/DISPLAY "Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_MEAN/DISPLAY "Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_MEAN/DISPLAY "Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_MEAN/DISPLAY "Post-Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_MEAN/DISPLAY "Post-Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_MEAN/DISPLAY "Post-Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_MEDIAN/DISPLAY "Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_Median/DISPLAY "Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_Median/DISPLAY "Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_Median/DISPLAY "Post-Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_Median/DISPLAY "Post-Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_Median/DISPLAY "Post-Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_STD/DISPLAY "Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_STD/DISPLAY "Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_STD/DISPLAY "Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_STD/DISPLAY "Post-Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_STD/DISPLAY "Post-Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_STD/DISPLAY "Post-Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE BUNDLEMEDIAN/DISPLAY "Total Episode Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMEAN/DISPLAY "Total Episode Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLESTD/DISPLAY "Total Episode Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q1/DISPLAY "Total Episode Costs/1st Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q3/DISPLAY "Total Episode Costs/3rd Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_IQR/DISPLAY "Total Episode/Costs IQR" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE COMPL_PER/DISPLAY "Complication Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE REVISE_PER/DISPLAY "Revision Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE READMIT_PER/DISPLAY "Readmission Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE FI_PER/DISPLAY "% FI" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE BUNDLEMIN/DISPLAY "Total Episode/Costs Minimum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMAX/DISPLAY "Total Episode/Costs Maximum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_SUM/DISPLAY "Total Episode/Costs Sum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

RUN;

ods tagsets.excelxp options(sheet_name = 'Market by Facility' sheet_interval='table');

PROC REPORT DATA=FACILITY_FINAL HEADLINE CENTER SPLIT="/";
COLUMN BILLG_TAX_ID_HOPPA MEDCR_ID_HOPPA FACNAME_HOPPA2 ELIG MKTSHARE FI_PER 
INDX_FAC_MEDIAN INDX_FAC_MEAN INDX_FAC_STD 
INDX_PROF_MEDIAN INDX_PROF_MEAN INDX_PROF_STD 
INDX_TOT_MEDIAN INDX_TOT_MEAN INDX_TOT_STD 
POST_FAC_MEDIAN POST_FAC_MEAN POST_FAC_STD 
POST_PROF_MEDIAN POST_PROF_MEAN POST_PROF_STD 
POST_TOT_MEDIAN POST_TOT_MEAN POST_TOT_STD 
BUNDLEMEDIAN BUNDLEMEAN BUNDLESTD BUNDLE_Q1 
BUNDLE_Q3 BUNDLE_IQR BUNDLEMIN BUNDLEMAX BUNDLE_SUM COMPL_PER REVISE_PER READMIT_PER;
DEFINE BILLG_TAX_ID_HOPPA/DISPLAY "Facility Tax ID" style(column)={cellwidth=1.0 in tagattr='Format:@'};
DEFINE MEDCR_ID_HOPPA/DISPLAY "Medicare ID" style(column)={tagattr='Format:@'};
DEFINE FACNAME_HOPPA2/DISPLAY "Facility Name" style(column)={cellwidth=1.5 in};
DEFINE ELIG/DISPLAY "Count of Eligible Episodes" style(column)={tagattr='format:#,##0'};
DEFINE MKTSHARE/DISPLAY "% of Market/Share" style(column)={tagattr='format:##0.0%'}; 

DEFINE INDX_FAC_MEAN/DISPLAY "Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_MEAN/DISPLAY "Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_MEAN/DISPLAY "Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_MEAN/DISPLAY "Post-Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_MEAN/DISPLAY "Post-Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_MEAN/DISPLAY "Post-Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_MEDIAN/DISPLAY "Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_Median/DISPLAY "Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_Median/DISPLAY "Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_Median/DISPLAY "Post-Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_Median/DISPLAY "Post-Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_Median/DISPLAY "Post-Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_STD/DISPLAY "Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_STD/DISPLAY "Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_STD/DISPLAY "Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_STD/DISPLAY "Post-Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_STD/DISPLAY "Post-Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_STD/DISPLAY "Post-Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE BUNDLEMEDIAN/DISPLAY "Total Episode Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMEAN/DISPLAY "Total Episode Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLESTD/DISPLAY "Total Episode Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q1/DISPLAY "Total Episode Costs/1st Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q3/DISPLAY "Total Episode Costs/3rd Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_IQR/DISPLAY "Total Episode/Costs IQR" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE COMPL_PER/DISPLAY "Complication Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE REVISE_PER/DISPLAY "Revision Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE READMIT_PER/DISPLAY "Readmission Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE FI_PER/DISPLAY "% FI" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE BUNDLEMIN/DISPLAY "Total Episode/Costs Minimum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMAX/DISPLAY "Total Episode/Costs Maximum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_SUM/DISPLAY "Total Episode/Costs Sum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
RUN;

ods tagsets.excelxp options(sheet_name = 'Market by Physician Group' sheet_interval='table');

PROC REPORT DATA=PG_FINAL HEADLINE CENTER SPLIT="/";
COLUMN SURGEON_TIN ELIG MKTSHARE FI_PER 
INDX_FAC_MEDIAN INDX_FAC_MEAN INDX_FAC_STD 
INDX_PROF_MEDIAN INDX_PROF_MEAN INDX_PROF_STD 
INDX_TOT_MEDIAN INDX_TOT_MEAN INDX_TOT_STD 
POST_FAC_MEDIAN POST_FAC_MEAN POST_FAC_STD 
POST_PROF_MEDIAN POST_PROF_MEAN POST_PROF_STD 
POST_TOT_MEDIAN POST_TOT_MEAN POST_TOT_STD 
BUNDLEMEDIAN BUNDLEMEAN BUNDLESTD BUNDLE_Q1 
BUNDLE_Q3 BUNDLE_IQR BUNDLEMIN BUNDLEMAX BUNDLE_SUM COMPL_PER REVISE_PER READMIT_PER;
DEFINE SURGEON_TIN/DISPLAY "Physician Group Tax ID" style(column)={cellwidth=1.0 in tagattr='Format:@'};
DEFINE ELIG/DISPLAY "Count of Eligible Episodes" style(column)={tagattr='format:#,##0'};
DEFINE MKTSHARE/DISPLAY "% of Market/Share" style(column)={tagattr='format:##0.0%'}; 

DEFINE INDX_FAC_MEAN/DISPLAY "Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_MEAN/DISPLAY "Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_MEAN/DISPLAY "Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_MEAN/DISPLAY "Post-Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_MEAN/DISPLAY "Post-Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_MEAN/DISPLAY "Post-Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_MEDIAN/DISPLAY "Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_Median/DISPLAY "Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_Median/DISPLAY "Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_Median/DISPLAY "Post-Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_Median/DISPLAY "Post-Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_Median/DISPLAY "Post-Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_STD/DISPLAY "Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_STD/DISPLAY "Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_STD/DISPLAY "Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_STD/DISPLAY "Post-Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_STD/DISPLAY "Post-Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_STD/DISPLAY "Post-Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE BUNDLEMEDIAN/DISPLAY "Total Episode Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMEAN/DISPLAY "Total Episode Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLESTD/DISPLAY "Total Episode Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q1/DISPLAY "Total Episode Costs/1st Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q3/DISPLAY "Total Episode Costs/3rd Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_IQR/DISPLAY "Total Episode/Costs IQR" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE COMPL_PER/DISPLAY "Complication Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE REVISE_PER/DISPLAY "Revision Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE READMIT_PER/DISPLAY "Readmission Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE FI_PER/DISPLAY "% FI" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE BUNDLEMIN/DISPLAY "Total Episode/Costs Minimum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMAX/DISPLAY "Total Episode/Costs Maximum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_SUM/DISPLAY "Total Episode/Costs Sum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

RUN;

ods tagsets.excelxp options(sheet_name = 'Market by Surgeon' sheet_interval='table');

PROC REPORT DATA=SURGEON_FINAL HEADLINE CENTER SPLIT="/";
COLUMN BILLG_TAX_ID_HOPPA MEDCR_ID_HOPPA FACNAME_HOPPA2 SURGEON_TIN SURGEON_NAME2 SURGEON_NPI 
ELIG MKTSHARE FI_PER 
INDX_FAC_MEDIAN INDX_FAC_MEAN INDX_FAC_STD 
INDX_PROF_MEDIAN INDX_PROF_MEAN INDX_PROF_STD 
INDX_TOT_MEDIAN INDX_TOT_MEAN INDX_TOT_STD 
POST_FAC_MEDIAN POST_FAC_MEAN POST_FAC_STD 
POST_PROF_MEDIAN POST_PROF_MEAN POST_PROF_STD 
POST_TOT_MEDIAN POST_TOT_MEAN POST_TOT_STD 
BUNDLEMEDIAN BUNDLEMEAN BUNDLESTD BUNDLE_Q1 
BUNDLE_Q3 BUNDLE_IQR BUNDLEMIN BUNDLEMAX BUNDLE_SUM COMPL_PER REVISE_PER READMIT_PER;
DEFINE BILLG_TAX_ID_HOPPA/DISPLAY "Facility Tax ID" style(column)={cellwidth=1.0 in tagattr='Format:@'};
DEFINE MEDCR_ID_HOPPA/DISPLAY "Medicare ID" style(column)={cellwidth=1.0 in tagattr='Format:@'};
DEFINE FACNAME_HOPPA2/DISPLAY "Facility Name" style(column)={cellwidth=1.5 in};
DEFINE SURGEON_TIN/DISPLAY "Physician Group Tax ID" style(column)={cellwidth=1.0 in tagattr='Format:@'};
DEFINE SURGEON_NAME2/DISPLAY "Surgeon Name" style(column)={cellwidth=1.5 in};
DEFINE SURGEON_NPI/DISPLAY "Surgeon NPI" style(column)={cellwidth=1.0 in tagattr='Format:@'};
DEFINE ELIG/DISPLAY "Count of Eligible Episodes" style(column)={tagattr='format:#,##0'};
DEFINE MKTSHARE/DISPLAY "% of Market/Share" style(column)={tagattr='format:##0.0%'}; 

DEFINE INDX_FAC_MEAN/DISPLAY "Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_MEAN/DISPLAY "Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_MEAN/DISPLAY "Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_MEAN/DISPLAY "Post-Index Facility/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_MEAN/DISPLAY "Post-Index Professional/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_MEAN/DISPLAY "Post-Index Total/Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_MEDIAN/DISPLAY "Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_Median/DISPLAY "Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_Median/DISPLAY "Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_Median/DISPLAY "Post-Index Facility/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_Median/DISPLAY "Post-Index Professional/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_Median/DISPLAY "Post-Index Total/Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE INDX_FAC_STD/DISPLAY "Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_PROF_STD/DISPLAY "Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE INDX_TOT_STD/DISPLAY "Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_FAC_STD/DISPLAY "Post-Index Facility/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_PROF_STD/DISPLAY "Post-Index Professional/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE POST_TOT_STD/DISPLAY "Post-Index Total/Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

DEFINE BUNDLEMEDIAN/DISPLAY "Total Episode Costs Median" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMEAN/DISPLAY "Total Episode Costs Mean" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLESTD/DISPLAY "Total Episode Costs Std Dev" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q1/DISPLAY "Total Episode Costs/1st Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_Q3/DISPLAY "Total Episode Costs/3rd Quartile" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_IQR/DISPLAY "Total Episode/Costs IQR" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE COMPL_PER/DISPLAY "Complication Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE REVISE_PER/DISPLAY "Revision Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE READMIT_PER/DISPLAY "Readmission Rate" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE FI_PER/DISPLAY "% FI" 
style(column)={cellwidth=1.0 in tagattr='format:##0.0%'};
DEFINE BUNDLEMIN/DISPLAY "Total Episode/Costs Minimum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLEMAX/DISPLAY "Total Episode/Costs Maximum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};
DEFINE BUNDLE_SUM/DISPLAY "Total Episode/Costs Sum" 
style(column)={cellwidth=1.0 in tagattr='format:$#,##0'};

RUN;

ODS tagsets.excelxp close;
