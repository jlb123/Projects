OPTIONS MPRINT COMPRESS=YES;

%LET BUNDLE=THR;
%LET PROVIDER=ORTHOVA; 
%LET DATASET=VA_THR_CASE_0714_0615_PCR_V1;
%LET IDVAR=SURGEON_TIN;
%LET FILEPATH=/ephc/ebp/nobackup/users/blase/;
%LET RELEASE=R5;
%LET ADMINID=%STR('540885859','202159335','541025125','541722607');
%LET ST=VA;
%LET FACIDVAR=billg_tax_id_hoppa;

LIBNAME &ST._&BUNDLE "/ephc/ebp/backup/data/phi/tjr/%LOWCASE(&ST)/%LOWCASE(&BUNDLE)";

PROC FORMAT;

VALUE YN 0="NO" 
		 1="YES";
RUN;

DATA &BUNDLE._ORIG;
SET &ST._&BUNDLE..&DATASET;

IF &IDVAR IN (&ADMINID);

*READMISSION FLAG*;
IF READMIT_FLG=1 AND (compl_flg=1 OR revise_flg=1) THEN READMISSION=1;
ELSE READMISSION=0;

FACNAME_HOPPA=UPCASE(FACNAME_HOPPA);

RUN;


*DATASET WITH ALL VALID R5 TKR EPISODES FROM ORTHOVA*;

PROC SQL;
CREATE TABLE TAB1 AS
SELECT DISTINCT &FACIDVAR, facname_hoppa, medcr_id_hoppa
FROM &BUNDLE._ORIG
ORDER BY facname_hoppa;
QUIT;

PROC SORT DATA=&BUNDLE._ORIG; BY &FACIDVAR medcr_id_hoppa; RUN;
PROC SORT DATA=TAB1; BY &FACIDVAR medcr_id_hoppa; RUN;

*REMERGING DATASET WITH 1 NAME PER FACILITY WITH ENTIRE DATASET*;
DATA TAB3;
MERGE &BUNDLE._ORIG (DROP=facname_hoppa)
	  TAB1;
BY &FACIDVAR medcr_id_hoppa;

*NOW THAT HAVE FACILITY NAME STANDARDIZED, CHANGING SURGEONS NAMES WHO ARE UNK TO THE FACILITY NAME + OTHER SURGEON*;
*CHANGING UNKNOWN SURGEON NAME TO GENERIC FACILITY OTHER SURGEON*;
SURGEON_NAME2=UPCASE(SURGEON_NAME);
IF SURGEON_NAME="UNK" THEN SURGEON_NAME2=CATX(" ",facname_hoppa,"OTHER SURGEON");

*CHANGING UNKNOWN SURGEON NPI TO BLANK NPI*;
SURGEON_NPI2=SURGEON_NPI;
IF SURGEON_NPI="UNK" THEN SURGEON_NPI2=" ";

RUN;

*EXTRACTING INDIVIDUAL SURGEONS*;
*NOTE: LISTING ALL SURGEONS FOR A PARTICULAR ADMINISTRATIVE PROVIDER, NOT JUST THE ONES THAT HAD ELIGIBLE
BUNDLE EPISODES. PER BUSINESS TEAM - WE WANT TO MAKE SURE THAT ADMIN PROVIDER KNOWS THAT WE SEARCHED ALL SURGEONS
EVEN IF SOME DIDNT END UP HAVING ELIGIBLE EPISODES*;

PROC SORT DATA=TAB3; BY SURGEON_NPI2; RUN;

PROC SQL;
CREATE TABLE TAB4 AS
SELECT DISTINCT SURGEON_NPI2, SURGEON_NAME2
FROM TAB3
ORDER BY SURGEON_NPI2, SURGEON_NAME2;
QUIT;

*IF PROVIDER HAS THE SAME NPI BUT NAME IS DIFFERENT THIS REMOVES DUPLICATE NAMES*;
DATA TAB5;
SET TAB4;
BY SURGEON_NPI2;
IF FIRST.SURGEON_NPI2;
RUN;

*RESORTING DATASET TO BE MERGED BELOW*;
PROC SORT DATA=TAB5; BY SURGEON_NPI2; RUN;

*REMERGING DATASET WITH NAME CORRECTIONS FOR LATER USE AND ONLY KEEPING ELIGIBLE CASES*;
*NOTE: USE SURGEON_NAME2 FOR SURGEON NAME AND facname_hoppa FOR FACILITY NAME SINCE THEYRE CORRECTED*;
DATA NEW_&BUNDLE;
MERGE TAB3 (DROP=SURGEON_NAME2)
	  TAB5;
BY SURGEON_NPI2;

/*** VALID -- Commercial - EXCLUSION CASCADE   ***/
*NOTE: EXCLUSIONS ARE THE SAME FOR THR AND TKR*;
if 
DRG_flg=1 AND /* Exclude episodes with the correct surg proc code but incorrect DRG (i.e., 462)*/
 		  /* DRG inclusion criteria for index procedure but only apply to IP episodes */
			  /* allows for ASC episodes to not be excluded b/c DRG criteria is not applicable */
ind_flg=1 AND /* index trigger occurred within designated index period exclude 2nd index trigger */
			  /* occurring during experience period but outside of index period -- ind_flg=2 */
 cap_flg in (0,2) AND  /* product exclusion criteria episodes with capitation-- cap_flg=1 */
ex_dx_flg=0 AND 	/* clinical historical exclusion criteria */
dx_flg=1 AND 		/* Dx inclusion criteria */
lob_lvl_flg in (1,2,3,4) AND /* Program Participation Exclusions of MCARE and MCAID */					
enrl_flg=1 AND /* continuous enrollment criteria */
lob_flg=1 AND  /* continuous enrollment in same plan criteria */
age_flg=1 AND  /* minimum age at index service date criteria */
WP_Primary=0 AND /* Anthem primary criteria */
blt_flg=0 AND   /* bilateral exclusion criteria */
hosp_only_flg=0; /* product exclusion criteria */

*MAKING MANUAL CORRECTIONS FOR SURGEON NAME FOR THR - IF RUNNING CODE FOR TKR COMMENT THIS OUT*;

IF SURGEON_NPI2="1407822604" THEN SURGEON_NAME2="JESSUP DOUGLAS EUGENE MD";
IF SURGEON_NPI2="1578584322" THEN SURGEON_NAME2="MADDEN MARK P MD";

RUN;

*VARIABLES INCLUDED:

*NEW_TKR CONTAINS ALL VALID R5 TKR EPISODES FROM ORTHOVA (USED PER CODE TO FORM THIS DATASET)*;
*JOINING NEW_TKR WITH THE CLAIM DATA FILE: VA_TKR_PCR_CLM_0714_0615 *;
*JOINING ON MBR_KEY AND RBNUM SINCE A COUPLE OF MBR_KEYS HAVE 2 EPISODES*;
*ALL CLAIMS DETAIL FOR ELIGIBLE EPISODES*;

*NOTE: KEEPING MBR_KEY, RBNUM, CLM_FLG, COMPL_FLG AND REVISE_FLG IN DATASET TO USE TO PULL OUT OBSERVATIONS THAT HAD A COMPLICATION OR REVISION IN THE POST INDEX PERIOD. 
THESE VARIABLES WILL BE DROPPED FROM THE DATASET BEFORE SENDING TO PROVIDER*;

PROC SQL;
CREATE TABLE CLAIM_DETAIL AS 
SELECT 
A.INDX_SURGEON_NAME,
A.INDX_SURGEON_NPI,
A.INDX_HLTH_SRVC_CD,
A.indx_CLM_LINE_SRVC_STRT_DT, 
B.CLM_NBR,
B.CLM_LINE_NBR,
B.CLM_LINE_SRVC_STRT_DT,
B.CLM_LINE_SRVC_END_DT,
B.SRC_BILLG_TAX_ID,
B.PROV_NM,
B.RVNU_CD,
B.HLTH_SRVC_CD,
B.FNL_DRG_CD,
B.PRNCPL_DIAG_CD_HDR,
B.PRNCPL_DIAG_CD_LN,
B.PRNCPL_ICD_PROC_CD,
B.CLM_FLG,
A.COMPL_FLG,
A.REVISE_FLG,
A.MBR_KEY,
A.RBNUM,
B.SRC_MBR_LAST_NM,
B.MBR_GNDR_CD,
B.SRC_MBR_BRTH_DT,
A.READMISSION,
B.COMPL_FLG_CLM,
B.REVISE_FLG_CLM,
A.bundlecost_tot_PCR,
A.postindex_tot_cost_PCR,
CASE WHEN B.READMIT_FLG=1 AND (B.REVISE_FLG_CLM=1 OR B.COMPL_FLG_CLM=1) THEN 1
ELSE 0
END AS READMISSION_CLM
from NEW_&BUNDLE (RENAME=(SURGEON_NAME2=INDX_SURGEON_NAME SURGEON_NPI=INDX_SURGEON_NPI)) A
LEFT join &ST._&BUNDLE..&ST._&BUNDLE._PCR_CLM_0714_0615 (RENAME=(COMPL_FLG=COMPL_FLG_CLM REVISE_FLG=REVISE_FLG_CLM)) B 
on A.MBR_KEY = B.MBR_KEY AND
A.RBNUM=B.RBNUM
;
QUIT;

*CREATE MACRO VARIABLES FOR SUBSETTING DATA FROM UNIQUE MBR_KEY AND RBNUM COMBINATIONS*;
*TKR: WITH DUPLICATES REMOVED THERE ARE 23 UNIQUE COMBINATIONS OF MBR_KEY AND RBNUM THAT HAVE COMPLICATIONS/REVISIONS/READMISSIONS IN THE POST-INDEX PERIOD*; 
*THR: WITH DUPLICATES REMOVED THERE ARE 18 UNIQUE COMBINATIONS OF MBR_KEY AND RBNUM THAT HAVE COMPLICATIONS/REVISIONS/READMISSIONS IN THE POST-INDEX PERIOD*;  
PROC SQL;
SELECT DISTINCT MBR_KEY FORMAT $32., RBNUM  
INTO :M1 SEPARATED BY ' ', :R1 SEPARATED BY ' '
FROM CLAIM_DETAIL
WHERE CLM_FLG='INDX_PST' AND (COMPL_FLG=1 OR REVISE_FLG=1);
QUIT; 

*SELECTING SURGEON NPIS WHO HAD A COMPLICATION/REVISION/READMISSION IN POST-INDEX PERIOD*;
*TKR: THERE ARE 17 UNIQUE PHYSICIANS*;
*THR: THERE ARE 12 UNIQUE PHYSICIANS*;

PROC SQL;
SELECT DISTINCT INDX_SURGEON_NPI 
INTO :S1 SEPARATED BY ' '
FROM CLAIM_DETAIL
WHERE CLM_FLG='INDX_PST' AND (COMPL_FLG=1 OR REVISE_FLG=1);
QUIT; 


*TKR: LOOPING THROUGH ALL 23 COMBINATIONS OF MBR_KEY AND RBNUM TO PULL OUT RELEVANT CLAIMS*;
*THR: LOOPING THROUGH ALL 18 COMBINATIONS OF MBR_KEY AND RBNUM TO PULL OUT RELEVANT CLAIMS*;

%MACRO CLAIMS;

DATA CLAIM_FINAL;
SET CLAIM_DETAIL;

*NOTE: YOU WILL HAVE TO CHANGE THE NUMBER IN THE DO STATEMENT BELOW ACCORDING TO HOW MANY UNIQUE EPISODES 
THERE ARE WITH COMPLICATIONS/REVISIONS/READMISSIONS*;
*JENNY - AUTOMATE THIS WITH COUNTW LATER*; 
%DO A=1 %TO 18;
	%LET MVAR=%SCAN(&M1, &A, %STR( ));
	%LET RVAR=%SCAN(&R1, &A, %STR( ));

/*FLAGGING ALL OBSERVATIONS (DURING INDEX AND POST INDEX PERIODS) THAT HAVE COMPLICATIONS/REVISIONS/READMISSIONS IN THE POST INDEX PERIOD*/
IF MBR_KEY="&MVAR" AND RBNUM=&RVAR THEN FLAG=1;

%END;

*KEEPING ONLY OBSERVATIONS THAT HAVE COMPLICATIONS/REVISIONS/READMISSIONS IN POST-INDEX PERIOD*;
IF FLAG=1;

RUN;

%MEND CLAIMS;
%CLAIMS;
TITLE;

*CREATING DATASET OF CASES WITHOUT COMPLICATIONS/REVISIONS/READMISSIONS FOR SAME SURGEONS ABOVE*;
%MACRO CLAIMSBYSURG;

DATA CLAIM_SURG_FINAL;
SET CLAIM_DETAIL;

%DO A=1 %TO 12;
	%LET SVAR=%SCAN(&S1, &A, %STR( ));

IF INDX_SURGEON_NPI="&SVAR" AND (COMPL_FLG NE 1 AND REVISE_FLG NE 1 AND READMISSION NE 1) THEN FLAG=1;

%END;

*KEEPING ONLY OBSERVATIONS THAT HAVE COMPLICATIONS/REVISIONS/READMISSIONS IN POST-INDEX PERIOD*;
IF FLAG=1;

RUN;

DATA CLAIM_SURG_SUMMARY;
SET NEW_&BUNDLE;

%DO A=1 %TO 12;
	%LET SVAR=%SCAN(&S1, &A, %STR( ));

IF SURGEON_NPI="&SVAR" AND (COMPL_FLG NE 1 AND REVISE_FLG NE 1 AND READMISSION NE 1) THEN FLAG=1;

%END;

*KEEPING ONLY OBSERVATIONS THAT HAVE COMPLICATIONS/REVISIONS/READMISSIONS IN POST-INDEX PERIOD*;
IF FLAG=1;

RUN;

%MEND CLAIMSBYSURG;
%CLAIMSBYSURG;

*BY INDIVIDUAL EPISODES - TOTAL COST AND TOTAL POSTINDEX COST BY SURGEON*;
PROC SORT DATA=CLAIM_SURG_SUMMARY; BY SURGEON_NAME2 SURGEON_NPI MBR_KEY RBNUM; RUN;
PROC FREQ DATA=CLAIM_SURG_SUMMARY; 
BY SURGEON_NAME2 SURGEON_NPI MBR_KEY RBNUM; 
TABLES bundlecost_tot_PCR*postindex_tot_cost_PCR/LIST MISSING OUT=EPSURG NOPERCENT; 
RUN;


*SUMMARY OF ALL CLAIMS BY SURGEON - CLAIMS WHERE THERE WAS NO COMPLICATION/REVISION/READMISSION*;
PROC SORT DATA=CLAIM_SURG_FINAL; BY INDX_SURGEON_NAME INDX_SURGEON_NPI; RUN;

PROC MEANS DATA=CLAIM_SURG_FINAL MAXDEC=0 N MEAN STD MEDIAN Q1 Q3;
BY INDX_SURGEON_NAME INDX_SURGEON_NPI;
VAR bundlecost_tot_PCR;
OUTPUT OUT=NOCOMP_B N=A MEAN=B STD=C MEDIAN=D Q1=E Q3=F;
RUN;


PROC MEANS DATA=CLAIM_SURG_FINAL MAXDEC=0 N MEAN STD MEDIAN Q1 Q3;
BY INDX_SURGEON_NAME INDX_SURGEON_NPI;
VAR postindex_tot_cost_PCR;
OUTPUT OUT=NOCOMP_P N=A MEAN=B STD=C MEDIAN=D Q1=E Q3=F;
RUN;

PROC SQL;
CREATE TABLE NEPS AS 
SELECT INDX_SURGEON_NAME, INDX_SURGEON_NPI, 
COUNT(DISTINCT RBNUM) AS NUM_EPS
FROM CLAIM_SURG_FINAL
GROUP BY INDX_SURGEON_NAME, INDX_SURGEON_NPI;
QUIT;

PROC SQL;
CREATE TABLE NOCOMP_B2 AS
SELECT A.*, B.NUM_EPS
FROM NOCOMP_B A
INNER JOIN NEPS B
ON A.INDX_SURGEON_NAME=B.INDX_SURGEON_NAME
AND A.INDX_SURGEON_NPI=B.INDX_SURGEON_NPI;
QUIT;

PROC SQL;
CREATE TABLE NOCOMP_P2 AS
SELECT A.*, B.NUM_EPS
FROM NOCOMP_P A
INNER JOIN NEPS B
ON A.INDX_SURGEON_NAME=B.INDX_SURGEON_NAME
AND A.INDX_SURGEON_NPI=B.INDX_SURGEON_NPI;
QUIT;


******************************************************************************************;
*SUMMARY OF ALL CLAIMS BY SURGEON - CLAIMS WHERE THERE WAS A COMPLICATION/REVISION/READMISSION*;

PROC SORT DATA=CLAIM_FINAL; BY INDX_SURGEON_NAME INDX_SURGEON_NPI; RUN;

PROC MEANS DATA=CLAIM_FINAL MAXDEC=0 N MEAN STD MEDIAN Q1 Q3;
BY INDX_SURGEON_NAME INDX_SURGEON_NPI;
VAR bundlecost_tot_PCR;
OUTPUT OUT=COMP_B N=A MEAN=B STD=C MEDIAN=D Q1=E Q3=F;
RUN;

PROC MEANS DATA=CLAIM_FINAL MAXDEC=0 N MEAN STD MEDIAN Q1 Q3;
BY INDX_SURGEON_NAME INDX_SURGEON_NPI;
VAR postindex_tot_cost_PCR;
OUTPUT OUT=COMP_P N=A MEAN=B STD=C MEDIAN=D Q1=E Q3=F;
RUN;

PROC SQL;
CREATE TABLE NEPS_COMP AS 
SELECT INDX_SURGEON_NAME, INDX_SURGEON_NPI, 
COUNT(DISTINCT RBNUM) AS NUM_EPS
FROM CLAIM_FINAL
GROUP BY INDX_SURGEON_NAME, INDX_SURGEON_NPI;
QUIT;

PROC SQL;
CREATE TABLE COMP_B2 AS
SELECT A.*, B.NUM_EPS
FROM COMP_B A
INNER JOIN NEPS_COMP B
ON A.INDX_SURGEON_NAME=B.INDX_SURGEON_NAME
AND A.INDX_SURGEON_NPI=B.INDX_SURGEON_NPI;
QUIT;


PROC SQL;
CREATE TABLE COMP_P2 AS
SELECT A.*, B.NUM_EPS
FROM COMP_P A
INNER JOIN NEPS_COMP B
ON A.INDX_SURGEON_NAME=B.INDX_SURGEON_NAME
AND A.INDX_SURGEON_NPI=B.INDX_SURGEON_NPI;
QUIT;


TITLE;
*OUTPUTTING DATASET TO EXCEL*;
ods Tagsets.ExcelXP file="/ephc/ebp/nobackup/users/blase/ORTHOVA &BUNDLE CLAIM DETAIL - &SYSDATE..xml" style=SEASIDE
     options(embedded_titles='yes' embedded_footnotes='yes');

ods tagsets.excelxp options(sheet_name = 'OrthoVA Claims Detail');

TITLE;
PROC REPORT DATA=CLAIM_FINAL HEADLINE CENTER SPLIT="/";
COLUMN INDX_SURGEON_NAME INDX_SURGEON_NPI INDX_HLTH_SRVC_CD indx_CLM_LINE_SRVC_STRT_DT CLM_NBR CLM_LINE_NBR CLM_LINE_SRVC_STRT_DT CLM_LINE_SRVC_END_DT SRC_BILLG_TAX_ID PROV_NM RVNU_CD
HLTH_SRVC_CD FNL_DRG_CD PRNCPL_DIAG_CD_HDR PRNCPL_DIAG_CD_LN PRNCPL_ICD_PROC_CD SRC_MBR_LAST_NM MBR_GNDR_CD SRC_MBR_BRTH_DT
COMPL_FLG_CLM REVISE_FLG_CLM READMISSION_CLM;

DEFINE INDX_SURGEON_NAME/DISPLAY "Index Surgeon Name" LEFT style(column)={cellwidth=2.0 in};
DEFINE INDX_SURGEON_NPI/ DISPLAY "Index Surgeon NPI" LEFT style(column)={tagattr='Format:@' cellwidth=1.0 in};
DEFINE INDX_HLTH_SRVC_CD/ DISPLAY "Index Health/Service Code" LEFT style(column)={tagattr='Format:@'};
DEFINE indx_CLM_LINE_SRVC_STRT_DT/ DISPLAY "Index Procedure/Date" LEFT;
DEFINE CLM_NBR/ DISPLAY "Claim Number" LEFT style(column)={tagattr='Format:@'};
DEFINE CLM_LINE_NBR/ DISPLAY "Claim Line/Number" LEFT style(column)={tagattr='Format:@'};
DEFINE CLM_LINE_SRVC_STRT_DT/ DISPLAY "Claim Line Service/Start Date" LEFT;
DEFINE CLM_LINE_SRVC_END_DT/ DISPLAY "Claim Line Service/End Date" LEFT;
DEFINE SRC_BILLG_TAX_ID/ DISPLAY "Source Billing/Tax Identifier" LEFT style(column)={tagattr='Format:@' cellwidth=1.0 in};
DEFINE PROV_NM/ DISPLAY "Provider Name" LEFT style(column)={cellwidth=2.5 in};
DEFINE RVNU_CD/ DISPLAY "Revenue Code" LEFT style(column)={tagattr='Format:@'};
DEFINE HLTH_SRVC_CD/ DISPLAY "Claim Health/Service Code" LEFT style(column)={tagattr='Format:@'};
DEFINE FNL_DRG_CD/ DISPLAY "Final DRG/ Code" LEFT style(column)={tagattr='Format:@'};
DEFINE PRNCPL_DIAG_CD_HDR/ DISPLAY "Principal Diagnosis/Code Header" LEFT style(column)={tagattr='Format:@' cellwidth=1.0 in};
DEFINE PRNCPL_DIAG_CD_LN/ DISPLAY "Principal Diagnosis/Code Line" LEFT style(column)={tagattr='Format:@' cellwidth=1.0 in};
DEFINE PRNCPL_ICD_PROC_CD/ DISPLAY "Principal ICD/Procedure Code" LEFT style(column)={tagattr='Format:@' cellwidth=1.0 in};
DEFINE SRC_MBR_LAST_NM/ DISPLAY "Member/Last Name" LEFT style(column)={cellwidth=1.0 in};
DEFINE MBR_GNDR_CD/ DISPLAY "Member/Gender" LEFT style(column)={cellwidth=1.0 in};
DEFINE SRC_MBR_BRTH_DT/ DISPLAY "Member/DOB" LEFT style(column)={cellwidth=1.0 in};
DEFINE COMPL_FLG_CLM/DISPLAY "Claim Complication" LEFT FORMAT=YN. style(column)={cellwidth=1.0 in};
DEFINE REVISE_FLG_CLM/DISPLAY "Claim Revision" LEFT FORMAT=YN. style(column)={cellwidth=1.0 in};
DEFINE READMISSION_CLM/DISPLAY "Claim Readmission" LEFT FORMAT=YN. style(column)={cellwidth=1.0 in};
RUN;

ods tagsets.excelxp options(sheet_name = 'No Complications' sheet_interval='none');

/*TITLE 'TOTAL COST AND TOTAL POSTINDEX COST BY INDIVIDUAL EPISODES WITHOUT COMPLICATIONS/REVISIONS/READMISSIONS'; */
/*PROC REPORT DATA=EPSURG HEADLINE CENTER SPLIT="/";*/
/*COLUMN SURGEON_NAME2 SURGEON_NPI bundlecost_tot_PCR postindex_tot_cost_PCR;*/
/*DEFINE SURGEON_NAME2/DISPLAY "Index Surgeon Name" LEFT style(column)={cellwidth=2.0 in};*/
/*DEFINE SURGEON_NPI/ DISPLAY "Index Surgeon NPI" LEFT style(column)={tagattr='Format:@' cellwidth=1.0 in};*/
/*DEFINE bundlecost_tot_PCR/DISPLAY "Total Bundle Cost" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};*/
/*DEFINE postindex_tot_cost_PCR/DISPLAY "Total Postindex Cost" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};*/
/*RUN;*/

TITLE 'SUMMARY STATISTICS FOR EPISODES WITHOUT COMPLICATIONS/REVISIONS/READMISSIONS BY SURGEON';
TITLE2 'TOTAL EPISODE BUNDLE COST'; 
PROC REPORT DATA=NOCOMP_B2 HEADLINE CENTER SPLIT="/";
COLUMN INDX_SURGEON_NAME INDX_SURGEON_NPI NUM_EPS A B C D E F;
DEFINE INDX_SURGEON_NAME/DISPLAY "Index Surgeon Name" LEFT style(column)={cellwidth=2.0 in};
DEFINE INDX_SURGEON_NPI/ DISPLAY "Index Surgeon NPI" LEFT style(column)={tagattr='Format:@' cellwidth=1.0 in};
DEFINE A/DISPLAY "# Claims" CENTER style(column)={tagattr='format:#,##0'};
DEFINE B/DISPLAY "Average" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE C/DISPLAY "Std Dev" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE D/DISPLAY "Median" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE E/DISPLAY "1st/Quartile" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE F/DISPLAY "3rd/Quartile" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE NUM_EPS/DISPLAY "# Episodes" CENTER style(column)={tagattr='format:#,##0'};
RUN;

TITLE 'SUMMARY STATISTICS FOR EPISODES WITHOUT COMPLICATIONS/REVISIONS/READMISSIONS BY SURGEON';
TITLE2 'TOTAL POST-INDEX COST'; 
PROC REPORT DATA=NOCOMP_P2 HEADLINE CENTER SPLIT="/";
COLUMN INDX_SURGEON_NAME INDX_SURGEON_NPI NUM_EPS A B C D E F;
DEFINE INDX_SURGEON_NAME/DISPLAY "Index Surgeon Name" LEFT style(column)={cellwidth=2.0 in};
DEFINE INDX_SURGEON_NPI/ DISPLAY "Index Surgeon NPI" LEFT style(column)={tagattr='Format:@' cellwidth=1.0 in};
DEFINE A/DISPLAY "# Claims" CENTER style(column)={tagattr='format:#,##0'};
DEFINE B/DISPLAY "Average" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE C/DISPLAY "Std Dev" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE D/DISPLAY "Median" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE E/DISPLAY "1st/Quartile" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE F/DISPLAY "3rd/Quartile" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE NUM_EPS/DISPLAY "# Episodes" CENTER style(column)={tagattr='format:#,##0'};
RUN;

ods tagsets.excelxp options(sheet_name = 'Complications' sheet_interval='none');

TITLE 'SUMMARY STATISTICS FOR EPISODES WITH COMPLICATIONS/REVISIONS/READMISSIONS BY SURGEON';
TITLE2 'TOTAL EPISODE BUNDLE COST'; 
PROC REPORT DATA=COMP_B2 HEADLINE CENTER SPLIT="/";
COLUMN INDX_SURGEON_NAME INDX_SURGEON_NPI NUM_EPS A B C D E F;
DEFINE INDX_SURGEON_NAME/DISPLAY "Index Surgeon Name" LEFT style(column)={cellwidth=2.0 in};
DEFINE INDX_SURGEON_NPI/ DISPLAY "Index Surgeon NPI" LEFT style(column)={tagattr='Format:@' cellwidth=1.0 in};
DEFINE A/DISPLAY "# Claims" CENTER style(column)={tagattr='format:#,##0'};
DEFINE B/DISPLAY "Average" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE C/DISPLAY "Std Dev" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE D/DISPLAY "Median" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE E/DISPLAY "1st/Quartile" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE F/DISPLAY "3rd/Quartile" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE NUM_EPS/DISPLAY "# Episodes" CENTER style(column)={tagattr='format:#,##0'};
RUN;

TITLE 'SUMMARY STATISTICS FOR EPISODES WITH COMPLICATIONS/REVISIONS/READMISSIONS BY SURGEON';
TITLE2 'TOTAL POST-INDEX COST'; 
PROC REPORT DATA=COMP_P2 HEADLINE CENTER SPLIT="/";
COLUMN INDX_SURGEON_NAME INDX_SURGEON_NPI NUM_EPS A B C D E F;
DEFINE INDX_SURGEON_NAME/DISPLAY "Index Surgeon Name" LEFT style(column)={cellwidth=2.0 in};
DEFINE INDX_SURGEON_NPI/ DISPLAY "Index Surgeon NPI" LEFT style(column)={tagattr='Format:@' cellwidth=1.0 in};
DEFINE A/DISPLAY "# Claims" CENTER style(column)={tagattr='format:#,##0'};
DEFINE B/DISPLAY "Average" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE C/DISPLAY "Std Dev" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE D/DISPLAY "Median" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE E/DISPLAY "1st/Quartile" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE F/DISPLAY "3rd/Quartile" FORMAT=DOLLAR11. CENTER style(column)={tagattr='format:$#,##0'};
DEFINE NUM_EPS/DISPLAY "# Episodes" CENTER style(column)={tagattr='format:#,##0'};
RUN;

ODS tagsets.excelxp close;


*LOOKING AT PROC MODIFIERS FOR LINES 88 AND 117 OF CLAIMS DETAIL SENT 10/24/16*;
PROC PRINT DATA=VA_TKR.VA_TKR_PCR_CLM_0714_0615 NOOBS;
WHERE CLM_NBR='5090829245000';
VAR CLM_NBR proc_mdfr_1_cd proc_mdfr_2_cd proc_mdfr_3_cd proc_mdfr_4_cd; 
RUN;

PROC PRINT DATA=VA_TKR.VA_TKR_PCR_CLM_0714_0615 NOOBS;
WHERE CLM_NBR='5090829243000';
VAR CLM_NBR proc_mdfr_1_cd proc_mdfr_2_cd proc_mdfr_3_cd proc_mdfr_4_cd; 
RUN;

********************************************************************************;
*REQUEST FROM MELISSA 5-4-17 FOR CLAIMS DETAIL FOR ORTHOVA PT VS NON-ORTHOVA PT*;
********************************************************************************;

DATA &BUNDLE._ORIG;
SET &ST._&BUNDLE..&DATASET;

IF SURGEON_TIN IN ('540885859','202159335','541025125') 
AND billg_tax_id_hoppa NOT IN ('541779911','621113733','611272888','621777534');

SURGEON_NAME2=UPCASE(SURGEON_NAME);
FACNAME_HOPPA2=UPCASE(FACNAME_HOPPA);

RUN;

*EXTRACTING INDIVIDUAL SURGEONS - USING MOST FREQUENT SURGEON NAME PER NPI*;
PROC SQL;
CREATE TABLE TAB_SURG AS 
SELECT SURGEON_NPI, SURGEON_NAME2,
COUNT(*) AS SURG_FREQ
FROM &BUNDLE._ORIG
GROUP BY SURGEON_NPI,SURGEON_NAME2
ORDER BY SURGEON_NPI, CALCULATED SURG_FREQ DESC, SURGEON_NAME2;
QUIT;

DATA TAB_1ST_SURG;
SET TAB_SURG;
*ONLY TAKING THE FIRST NAME/NPI COMBO IF THE SURGEON NAME/NPI IS MISSING*;
	BY SURGEON_NPI;
	IF FIRST.SURGEON_NPI;
RUN;

*EXTRACTING INDIVIDUAL FACILITIES - USING MOST FREQUENT FACILITY NAME*;
PROC SQL;
CREATE TABLE TAB_FAC AS 
SELECT &FACIDVAR, FACNAME_HOPPA2,
COUNT(*) AS FAC_FREQ
FROM &BUNDLE._ORIG
GROUP BY &FACIDVAR, FACNAME_HOPPA2
ORDER BY &FACIDVAR, CALCULATED FAC_FREQ DESC, FACNAME_HOPPA2;
QUIT;

DATA TAB_1ST_FAC;
SET TAB_FAC;
	BY &FACIDVAR;
	IF FIRST.&FACIDVAR;
RUN;

PROC SORT DATA=TAB_1ST_FAC; BY FACNAME_HOPPA2; RUN;
PROC SORT DATA=TAB_1ST_SURG; BY SURGEON_NAME2; RUN;


*REMERGING DATASET WITH NAME CORRECTIONS FOR PHYSICIAN, FACILITY AND PHYSICIAN GROUP. DATASET ONLY CONTAINS ELIGIBLE
CASES*;
PROC SQL;
CREATE TABLE NEW_&BUNDLE AS 
SELECT A.*,B.SURGEON_NAME2, D.FACNAME_HOPPA2
FROM &BUNDLE._ORIG (DROP=SURGEON_NAME2 FACNAME_HOPPA2) A
LEFT JOIN TAB_1ST_SURG B
ON A.SURGEON_NPI=B.SURGEON_NPI
LEFT JOIN TAB_1ST_FAC D
ON A.&FACIDVAR=D.&FACIDVAR
WHERE 
DRG_flg=1 AND /* Exclude episodes with the correct surg proc code but incorrect DRG (i.e., 462)*/
 		  /* DRG inclusion criteria for index procedure but only apply to IP episodes */
			  /* allows for ASC episodes to not be excluded b/c DRG criteria is not applicable */
ind_flg=1 AND /* index trigger occurred within designated index period exclude 2nd index trigger */
			  /* occurring during experience period but outside of index period -- ind_flg=2 */
 cap_flg in (0,2) AND  /* product exclusion criteria episodes with capitation-- cap_flg=1 */
ex_dx_flg=0 AND 	/* clinical historical exclusion criteria */
dx_flg=1 AND 		/* Dx inclusion criteria */
lob_lvl_flg in (1,2,3,4) AND /* Program Participation Exclusions of MCARE and MCAID */					
enrl_flg=1 AND /* continuous enrollment criteria */
lob_flg=1 AND  /* continuous enrollment in same plan criteria */
age_flg=1 AND  /* minimum age at index service date criteria */
WP_Primary=0 AND /* Anthem primary criteria */
blt_flg=0 AND   /* bilateral exclusion criteria */
hosp_only_flg=0; /* product exclusion criteria */;
QUIT;

PROC SQL;
CREATE TABLE CLAIM_DETAIL AS 
SELECT B.*, A.postindex_prof_RHAB_THPY_PCR,
CASE
WHEN SPCLTY_CD in ('02','06','10','14','20','24','28','33','40','77','78','85','90','98') 
	then 'SURG'
WHEN SPCLTY_CD in ('30',	'36',	'74',	'92','94') then 'RAD_IM'
WHEN SPCLTY_CD in ('05','32','43') then 'ANESTH'
WHEN SPCLTY_CD in ('53','52','54','57','58','63','87') then 'EQ_SUP'
WHEN SPCLTY_CD in ('22',	'47',	'69') then 'LAB_PATH'
WHEN SPCLTY_CD in ('01',	'08',	'11',	'37','38',	'44','50'	'97') then 'PRIM'
WHEN SPCLTY_CD in ('B4','23','25','65','67','72','A1','A4') then 'RHAB_THPY'
WHEN SPCLTY_CD = '59' then 'TRANS'
WHEN SPCLTY_CD in ('81','93') then 'ER_ICU'
WHEN SPCLTY_CD in ('C0','C3','03',	'04',	'07',	'13', '15',	'16', '17',	'18', '19','21',
'26', '27',	'29',	'34','35','39',	'41',	'46',	'48','49','60','61',	'66',	'70',	'71',
'82',	'83','84',	'89',	'99','68','64','80','42','A5','62','09','12','79','86','96','','76',
'A0','51','A8','88','55','UNK')
	then 'OTHER'
else 'NA'
END AS SPEC_FLG
from NEW_&BUNDLE A
LEFT join &ST._&BUNDLE..&ST._&BUNDLE._PCR_CLM_0714_0615 B 
on A.MBR_KEY = B.MBR_KEY AND
A.RBNUM=B.RBNUM
WHERE CLM_FLG='INDX_PST' AND CALCULATED SPEC_FLG IN ('RHAB_THPY');
QUIT;

*AND SRVC_RNDRG_TYPE_CD in ('PANCL','PHYSN');

proc freq data=claim_detail; tables SRVC_RNDRG_TYPE_CD; run;

ods Tagsets.ExcelXP file="/ephc/ebp/nobackup/users/blase/ORTHOVA &BUNDLE CLAIM DETAIL - &SYSDATE..xml" style=SEASIDE
     options(embedded_titles='yes' embedded_footnotes='yes');

ods tagsets.excelxp options(sheet_name = 'OrthoVA PT Claim Detail');

PROC PRINT DATA=CLAIM_DETAIL;
RUN;

ODS tagsets.excelxp close;


PROC SQL;
CREATE TABLE A AS
SELECT SRC_BILLG_TAX_ID, SRC_PROV_NM, SRVC_RNDRG_TYPE_CD,
SUM(ALWD_AMT) AS TOT,
COUNT(*) AS N,
CASE
WHEN SRC_BILLG_TAX_ID IN ('540885859','202159335','541025125') THEN 1
ELSE 0
END AS ORTHOVA
FROM CLAIM_DETAIL
GROUP BY SRC_BILLG_TAX_ID
ORDER BY CALCULATED TOT DESC;
QUIT;

*FREQUENCY OF ORTHOVA PTS VS NON-ORTHOVA PTS*;
PROC FREQ DATA=A; TABLES ORTHOVA; RUN;


*TOTAL SPEND FOR FACILITY AND PROFESSIONAL FOR ORTHOVA VS. NON-ORTHOVA*;
PROC SQL;
CREATE TABLE B AS
SELECT DISTINCT
SUM(ALWD_AMT) AS TOT,
COUNT(*) AS N,
CASE
WHEN SRC_BILLG_TAX_ID IN ('540885859','202159335','541025125') THEN 1
ELSE 0
END AS ORTHOVA,
CASE
WHEN SRVC_RNDRG_TYPE_CD IN ('PANCL','PHYSN') THEN 'PROF'
ELSE 'FAC'
END AS PF
FROM CLAIM_DETAIL
GROUP BY CALCULATED PF, ORTHOVA
;
QUIT;


*CLAIMS DETAIL - ONLY PHYSICIAN CLAIMS TO COMPARE TO EXISTING POSTINDEX REHAB VARIABLE*;
PROC SQL;
CREATE TABLE C AS
SELECT SRC_BILLG_TAX_ID,
SUM(ALWD_AMT) AS TOT
FROM CLAIM_DETAIL
WHERE SRVC_RNDRG_TYPE_CD in ('PANCL','PHYSN')
GROUP BY SRC_BILLG_TAX_ID
ORDER BY CALCULATED TOT DESC
;
QUIT;

*$30,433.44 - FROM CLAIMS DETAIL;
PROC SQL;
CREATE TABLE F AS 
SELECT
SUM(TOT) AS ALL_COSTS
FROM C;
QUIT;

*$30,433.44 - FROM SUMMARY DATASET;
PROC SQL;
CREATE TABLE G AS 
SELECT
SUM(postindex_prof_RHAB_THPY_PCR) AS ALL_COSTS
FROM NEW_&BUNDLE;
QUIT;

*MODIFYING 5/4 REQUEST TO USE R9 DATA PER MELISSA IN EMAIL SENT 5/22*;

OPTIONS MPRINT COMPRESS=YES;

%LET BUNDLE=TKR;
%LET PROVIDER=ORTHOVA; 
%LET IDVAR=SURGEON_TIN;
%LET FILEPATH=/ephc/ebp/nobackup/users/blase/;
%LET RELEASE=R9;
%LET ADMINID=%STR('540885859','202159335','541025125','541722607');
%LET ST=VA;
%LET FACIDVAR=billg_tax_id_hoppa;
%LET STARTDATE=0715;
%LET ENDDATE=0616;

%LET DATASET=&ST._&BUNDLE._&STARTDATE._&ENDDATE._&RELEASE;
LIBNAME &ST._&BUNDLE "/ephc/ebp/backup/data/phi/tjr/%LOWCASE(&ST)/%LOWCASE(&BUNDLE)";


DATA &BUNDLE._ORIG;
SET &ST._&BUNDLE..&DATASET;

IF SURGEON_TIN IN ('540885859','202159335','541025125') 
AND billg_tax_id_hoppa NOT IN ('541779911','621113733','611272888','621777534');

SURGEON_NAME2=UPCASE(SURGEON_NAME);
FACNAME_HOPPA2=UPCASE(FACNAME_HOPPA);

RUN;

*EXTRACTING INDIVIDUAL SURGEONS - USING MOST FREQUENT SURGEON NAME PER NPI*;
PROC SQL;
CREATE TABLE TAB_SURG AS 
SELECT SURGEON_NPI, SURGEON_NAME2,
COUNT(*) AS SURG_FREQ
FROM &BUNDLE._ORIG
GROUP BY SURGEON_NPI,SURGEON_NAME2
ORDER BY SURGEON_NPI, CALCULATED SURG_FREQ DESC, SURGEON_NAME2;
QUIT;

DATA TAB_1ST_SURG;
SET TAB_SURG;
*ONLY TAKING THE FIRST NAME/NPI COMBO IF THE SURGEON NAME/NPI IS MISSING*;
	BY SURGEON_NPI;
	IF FIRST.SURGEON_NPI;
RUN;

*EXTRACTING INDIVIDUAL FACILITIES - USING MOST FREQUENT FACILITY NAME*;
PROC SQL;
CREATE TABLE TAB_FAC AS 
SELECT &FACIDVAR, FACNAME_HOPPA2,
COUNT(*) AS FAC_FREQ
FROM &BUNDLE._ORIG
GROUP BY &FACIDVAR, FACNAME_HOPPA2
ORDER BY &FACIDVAR, CALCULATED FAC_FREQ DESC, FACNAME_HOPPA2;
QUIT;

DATA TAB_1ST_FAC;
SET TAB_FAC;
	BY &FACIDVAR;
	IF FIRST.&FACIDVAR;
RUN;

PROC SORT DATA=TAB_1ST_FAC; BY FACNAME_HOPPA2; RUN;
PROC SORT DATA=TAB_1ST_SURG; BY SURGEON_NAME2; RUN;


*REMERGING DATASET WITH NAME CORRECTIONS FOR PHYSICIAN, FACILITY AND PHYSICIAN GROUP. DATASET ONLY CONTAINS ELIGIBLE
CASES*;
PROC SQL;
CREATE TABLE NEW_&BUNDLE AS 
SELECT A.*,B.SURGEON_NAME2, D.FACNAME_HOPPA2
FROM &BUNDLE._ORIG (DROP=SURGEON_NAME2 FACNAME_HOPPA2) A
LEFT JOIN TAB_1ST_SURG B
ON A.SURGEON_NPI=B.SURGEON_NPI
LEFT JOIN TAB_1ST_FAC D
ON A.&FACIDVAR=D.&FACIDVAR
WHERE 
DRG_flg=1 AND /* Exclude episodes with the correct surg proc code but incorrect DRG (i.e., 462)*/
 		  /* DRG inclusion criteria for index procedure but only apply to IP episodes */
			  /* allows for ASC episodes to not be excluded b/c DRG criteria is not applicable */
ind_flg=1 AND /* index trigger occurred within designated index period exclude 2nd index trigger */
			  /* occurring during experience period but outside of index period -- ind_flg=2 */
 cap_flg in (0,2) AND  /* product exclusion criteria episodes with capitation-- cap_flg=1 */
ex_dx_flg=0 AND 	/* clinical historical exclusion criteria */
dx_flg=1 AND 		/* Dx inclusion criteria */
lob_lvl_flg in (1,2,3,4) AND /* Program Participation Exclusions of MCARE and MCAID */					
enrl_flg=1 AND /* continuous enrollment criteria */
lob_flg=1 AND  /* continuous enrollment in same plan criteria */
age_flg=1 AND  /* minimum age at index service date criteria */
WP_Primary=0 AND /* Anthem primary criteria */
blt_flg=0 AND   /* bilateral exclusion criteria */
hosp_only_flg=0; /* product exclusion criteria */;
QUIT;


*MERGING WITH R9 CLAIMS DATASET*;
PROC SQL;
CREATE TABLE CLAIM_DETAIL AS 
SELECT B.*, A.postindex_prof_RHAB_THPY_PCR, 
CASE
WHEN SPCLTY_CD in ('02','06','10','14','20','24','28','33','40','77','78','85','90','98') 
	then 'SURG'
WHEN SPCLTY_CD in ('30',	'36',	'74',	'92','94') then 'RAD_IM'
WHEN SPCLTY_CD in ('05','32','43') then 'ANESTH'
WHEN SPCLTY_CD in ('53','52','54','57','58','63','87') then 'EQ_SUP'
WHEN SPCLTY_CD in ('22',	'47',	'69') then 'LAB_PATH'
WHEN SPCLTY_CD in ('01',	'08',	'11',	'37','38',	'44','50'	'97') then 'PRIM'
WHEN SPCLTY_CD in ('B4','23','25','65','67','72','A1','A4') then 'RHAB_THPY'
WHEN SPCLTY_CD = '59' then 'TRANS'
WHEN SPCLTY_CD in ('81','93') then 'ER_ICU'
WHEN SPCLTY_CD in ('C0','C3','03',	'04',	'07',	'13', '15',	'16', '17',	'18', '19','21',
'26', '27',	'29',	'34','35','39',	'41',	'46',	'48','49','60','61',	'66',	'70',	'71',
'82',	'83','84',	'89',	'99','68','64','80','42','A5','62','09','12','79','86','96','','76',
'A0','51','A8','88','55','UNK')
	then 'OTHER'
else 'NA'
END AS SPEC_FLG,
CASE
WHEN SRVC_RNDRG_TYPE_CD IN ('PANCL','PHYSN') THEN 'PROF'
ELSE 'FAC'
END AS PF,
CASE
WHEN SRC_BILLG_TAX_ID IN ('540885859','202159335','541025125','541722607') THEN 1
ELSE 0
END AS ORTHOVA
from NEW_&BUNDLE A
LEFT join &ST._&BUNDLE..&ST._&BUNDLE._PCR_CLM_0715_0616 B 
on A.MBR_KEY = B.MBR_KEY AND
A.RBNUM=B.RBNUM
WHERE CLM_FLG='INDX_PST' AND CALCULATED SPEC_FLG IN ('RHAB_THPY');
QUIT;

PROC FREQ DATA=CLAIM_DETAIL;
WHERE ORTHOVA=0;
TABLES NPI_DWE/LIST MISSING;
RUN;

*BLNG_PROV_NM NPI_DWE PROV_NATL_PROV_ID_npi PROV_NM;
*PROV_NM LOOKS CLEANER THAN BLNG_PROV_NM (MORE UNKS IN THE LATTER)*;
*PROV_NM_blng=PROV_NM=RNDRG_PROV_NM*;
*SRC_PROV_NM - 59 MISSING*;
*SRC_PROV_NM_blng - 3 MISSING*;
*PROV_NM - 0 MISSING*;
*PROV_NM_blng - 0 MISSING*;
*RNDRG_PROV_NM - 0 MISSING*;
*PROV_NATL_PROV_ID_npi - 3 MISSING*;
*NPI_DWE - 3 MISSING*;

*EDITING PROV_NM TO USE MOST FREQUENT*;
PROC SQL;
CREATE TABLE TAB_PROV AS 
SELECT PROV_NATL_PROV_ID_npi, PROV_NM,
COUNT(*) AS PROV_FREQ
FROM CLAIM_DETAIL
GROUP BY PROV_NATL_PROV_ID_npi,PROV_NM
ORDER BY PROV_NATL_PROV_ID_npi, CALCULATED PROV_FREQ DESC, PROV_NM;
QUIT;

DATA TAB_1ST_PROV;
SET TAB_PROV;
*ONLY TAKING THE FIRST NAME/NPI COMBO IF THE SURGEON NAME/NPI IS MISSING*;
	BY PROV_NATL_PROV_ID_npi;
	IF FIRST.PROV_NATL_PROV_ID_npi;
RUN;

PROC SQL;
CREATE TABLE CLAIM_DETAIL_NEW AS 
SELECT A.*,B.PROV_NM
FROM CLAIM_DETAIL (DROP=PROV_NM) A
LEFT JOIN TAB_1ST_PROV B
ON A.PROV_NATL_PROV_ID_npi=B.PROV_NATL_PROV_ID_npi;
QUIT;


*OUTPUTTING PROVIDER NAME, NPI AND TOTAL COST*;
PROC SQL;
CREATE TABLE X AS
SELECT DISTINCT PROV_NM, PROV_NATL_PROV_ID_npi, SUM(ALWD_AMT) AS TOT
FROM CLAIM_DETAIL_NEW
WHERE ORTHOVA=0
GROUP BY PROV_NATL_PROV_ID_npi
ORDER BY CALCULATED TOT DESC;
QUIT; 


ods Tagsets.ExcelXP file="/ephc/ebp/nobackup/users/blase/NON-ORTHOVA PT THR CLAIM DETAIL - &SYSDATE..xml" style=SEASIDE
     options(embedded_titles='yes' embedded_footnotes='yes');

ods tagsets.excelxp options(sheet_name = 'Non-OrthoVA PT');

PROC REPORT DATA=X HEADLINE CENTER SPLIT="/";
COLUMN PROV_NM PROV_NATL_PROV_ID_npi TOT;
DEFINE PROV_NM/DISPLAY "Provider Name" left style(column)={cellwidth=2.0 in};
DEFINE PROV_NATL_PROV_ID_npi/DISPLAY "NPI" style(column)={tagattr='Format:@' cellwidth=1.0 in}; 
DEFINE TOT/DISPLAY "Total Allowed/Amount" style(column)={tagattr='format:$#,##0'};
RUN;

ODS tagsets.excelxp close;


PROC CONTENTS DATA=&ST._&BUNDLE..&ST._&BUNDLE._PCR_CLM_0715_0616; RUN;

PROC FREQ DATA=CLAIM_DETAIL;
TABLES PF*SRVC_RNDRG_TYPE_CD/LIST MISSING; RUN;

PROC SQL;
CREATE TABLE C AS 
SELECT PF, SUM(ALWD_AMT) AS TOT, COUNT(*) AS TOT_N
FROM CLAIM_DETAIL
GROUP BY PF; QUIT;

*SUM ALLOWED AMOUNT FOR ALL PT*;
PROC SQL;
CREATE TABLE C AS 
SELECT SUM(ALWD_AMT) AS TOT
FROM CLAIM_DETAIL; QUIT;

*SUM OF ALLOWED AMOUNT BY ORTHOVA AND NON-ORTHOVA PROVIDERS*;
PROC SQL;
CREATE TABLE A AS
SELECT SRC_BILLG_TAX_ID, SRC_PROV_NM, SRVC_RNDRG_TYPE_CD,
SUM(ALWD_AMT) AS TOT,
COUNT(*) AS N,
CASE
WHEN SRC_BILLG_TAX_ID IN ('540885859','202159335','541025125','541722607') THEN 1
ELSE 0
END AS ORTHOVA
FROM CLAIM_DETAIL
GROUP BY CALCULATED ORTHOVA
ORDER BY CALCULATED ORTHOVA DESC;
QUIT;

PROC FREQ DATA=A; TABLES ORTHOVA*TOT/LIST MISSING; RUN;

*SUM OF ALLOWED AMOUNT BY ORTHOVA AND NON-ORTHOVA PROVIDERS*;
PROC SQL;
CREATE TABLE A AS
SELECT SRC_BILLG_TAX_ID, SRC_PROV_NM, SRVC_RNDRG_TYPE_CD,
SUM(ALWD_AMT) AS TOT,
COUNT(*) AS N,
CASE
WHEN SRC_BILLG_TAX_ID IN ('540885859','202159335','541025125') THEN 1
ELSE 0
END AS ORTHOVA
FROM CLAIM_DETAIL
GROUP BY CALCULATED ORTHOVA
ORDER BY CALCULATED ORTHOVA DESC;
QUIT;

PROC FREQ DATA=A; TABLES ORTHOVA*TOT/LIST MISSING; RUN;

PROC SQL;
CREATE TABLE B AS
SELECT DISTINCT
SUM(ALWD_AMT) AS TOT,
COUNT(*) AS N,
CASE
WHEN SRC_BILLG_TAX_ID IN ('540885859','202159335','541025125') THEN 1
ELSE 0
END AS ORTHOVA,
CASE
WHEN SRVC_RNDRG_TYPE_CD IN ('PANCL','PHYSN') THEN 'PROF'
ELSE 'FAC'
END AS PF
FROM CLAIM_DETAIL
GROUP BY CALCULATED PF, CALCULATED ORTHOVA
;
QUIT;

PROC FREQ DATA=B; TABLES PF*TOT/LIST MISSING; RUN;


PROC SQL;
CREATE TABLE B AS
SELECT DISTINCT
SUM(ALWD_AMT) AS TOT,
COUNT(*) AS N,
CASE
WHEN SRC_BILLG_TAX_ID IN ('540885859','202159335','541025125') THEN 1
ELSE 0
END AS ORTHOVA,
CASE
WHEN SRVC_RNDRG_TYPE_CD IN ('PANCL','PHYSN') THEN 'PROF'
ELSE 'FAC'
END AS PF
FROM CLAIM_DETAIL
GROUP BY CALCULATED PF, ORTHOVA
;
QUIT;


proc contents data=new_&bundle; run;

*CLAIMS DETAIL - ONLY PHYSICIAN CLAIMS TO COMPARE TO EXISTING POSTINDEX REHAB VARIABLE*;
PROC SQL;
CREATE TABLE C AS
SELECT SRC_BILLG_TAX_ID,
SUM(ALWD_AMT) AS TOT
FROM CLAIM_DETAIL
WHERE SRVC_RNDRG_TYPE_CD in ('PANCL','PHYSN')
GROUP BY SRC_BILLG_TAX_ID
ORDER BY CALCULATED TOT DESC
;
QUIT;

*$30,433.44 - FROM CLAIMS DETAIL;
PROC SQL;
CREATE TABLE F AS 
SELECT
SUM(TOT) AS ALL_COSTS
FROM C;
QUIT;

*$30,433.44 - FROM SUMMARY DATASET;
PROC SQL;
CREATE TABLE G AS 
SELECT
SUM(postindex_prof_RHAB_THPY_PCR) AS ALL_COSTS
FROM NEW_&BUNDLE;
QUIT;

*5/26 - MELISSA ASKED ABOUT MULTIPLE PROCEDURES FOR SAME PATIENT*;

PROC FREQ DATA=NEW_&BUNDLE;
TABLES CUTOFF_FLG;
RUN;

PROC PRINT DATA=NEW_&BUNDLE;
WHERE CUTOFF_FLG=1;
RUN;

